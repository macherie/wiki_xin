======高通平台编译Android======
  * Android源码同步完成以后，再终端进入对应的目录，执行“source build/envsetup.sh”进行初始化设置。这个过程会添加一些shell命令到你的bash环境中。
  * 然后输入“lunch”，会列出可以编译的不同目标，根据自己领到设备，选择对应的编号。（我拿到的设备是S100D的，我选择了"18"）
 {{ :android:qq截图20140326104243.png?200 |}}

  * 然后确认选择"general"版，会列出相应的编译信息。
  * 输入“make -j4 ”进行编译。（-j4代表充分利用现有的四核处理器，如果你的电脑有八核的话，可以使用"-j8".）


======编译独立模块或镜像======

=====编译bootloader=====
make aboot
=====编译recovery.img=====
<code>
make recoveryimage
</code>

=====编译boot.img=====
<code>
make kernel
或者
make bootimage
</code>

=====编译system.img=====
<code>
make systemimage
</code>

=====编译userdata.img=====
<code>
make userdataimage
</code>

=====编译ramdisk.img=====
<code>
make ramdisk
</code>

=====编译模块=====
<code>
make $MODULE
（$MODULE看Android.mk中的LOCAL_MODULE定义）
</code>
其他的编译命令：m、mm（直接编译当前路径下的代码）、mmm（跟需要编译的代码路径），见build/envsetup.sh

=====编译模块之后的打包命令=====
<code>
make snod
</code>
快速打包system.img

或
<code>
out/host/linux-x86/bin/mkyaffs2image -f out/target/product/generic/system out/target/product/generic/system.img 
</code>

=====清除编译文件=====
<code>
make clean
</code>

=====注意=====
在使用make clean之后，必须重新source build/envsetup.sh和lunch。
否则可能造成部分在宏（在build目录下声明的宏）没有被打开（没有被赋值）！