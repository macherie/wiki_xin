--- //[[shu.yin@sim.com|尹姝]] 2014/2/21//
====== EFS分区损坏问题分析报告 ======
^Document Title:     |EFS分区损坏问题分析报告|
^Version:            |1.01               |
^Date:               |2013-04-19         |       
^Status:             |Release            |
^Document Control ID:|SIM0003            |
^Writer:             |Xifangqing         |


----


=====问题描述：=====

客户旺旺集团在S100(Qualcomm 8255芯片)的使用过程中，发现某些机器经过多次开关机后会再也无法正常启动，有些机器开机就直接进入QPST下载模式，有些机器在开机Log画面不断重启。

=====问题分析：=====

**<color teal>1. </color>**烧录Debug版本，使用Memory Debug Application抓取RAM dump之后，使用Trace32 Simulator分析，发现是Modem在初始化EFS文件系统的时候或是读写某个NV的时候出现error fetal:

有些机器是挂在EFS初始化函数中：

<code c>
void
efs_estdio_init (void)
{
  int i;
  struct fs_statvfs efs_info;

  if (efs_statvfs ("/", &efs_info))
    FS_ERR_FATAL ("efs_estdio_init failed, efs_errno=%d.", efs_errno, 0, 0);
  efs_block_size = efs_info.f_bsize;
……
}
</code>
Call stack 如下图

{{doc:efs1.png}}

有些机器挂在写某个NV 项 (NV5083、NV5804)：

<code c>
static int
efs_unlink_helper (struct nameidata *ndp)
{
  struct fs_vnode *dvp = ndp->dvp;
  struct fs_vnode *vp = ndp->vp;
  struct fs_mount_efs *dmp = (struct fs_mount_efs *) dvp->mp;
  struct fs_mount_efs *mp = (struct fs_mount_efs *) vp->mp;
  int result;

  XACT_CHECK (mp);

  if (!S_ISLNK (vp->mode) && !S_ISITM (vp->mode)) {
    ASSERT (vp->p.inode.nlink > 0);
    vp->p.inode.nlink--;
    vp->dirty = 1;
  ……

  return result;
}
</code>
{{doc:efs2.png}}

**<color teal>2. </color>**使用JTAG dump问题机器的EFS分区给高通EFS专家分析：

Note: 使用AMSS\products\7x30\core\storage\flash\tools\src\nandnand_dump.cmm，遵照提示运行即可。

进过高通分析，发现EFS分区是被pm_rst_file.txt损坏。

**<color teal>3. </color>**在代码里面查找pm_rst_file.txt文件，发现机器开机的时候会在pm_get_reset_reason_pcil和pm_set_reset_reason_pcil函数中读写EFS分区的pm_rst_file.txt文件，由于这个函数是在中断服务线程（IST）被调用，可能会出现被中断或重入，所以容易造成EFS损坏。

高通FAE的解释如下：

Efs operation is not allowed in IST context because it can be interrupted and re-entered, which will cause efs data corrupt

=====解决方案：=====

去除函数pm_get_reset_reason_pcil和pm_set_reset_reason_pcil中对于EFS分区的相关操作
