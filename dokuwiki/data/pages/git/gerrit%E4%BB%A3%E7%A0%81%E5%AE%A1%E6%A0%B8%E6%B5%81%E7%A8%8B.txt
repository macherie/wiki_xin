 --- //[[shu.yin@sim.com|尹姝]] 2013/12/11//
====== Gerrit 代码审核流程 ======

{{git:gerrit.png}}

====== Gerrit 介绍======
 --- //[[yuhua.wang@sim.com|yuhua.wang]] 2016/12/21 //

  * 为什么用repo和gerrit项目：
  - Android 使用git作为代码管理工具，并开发了gerrit进行代码审核以便更好的对代码进行集中式管理，还开发了repo命令行工具，对git部分命令封装，将数百个git库有效的进行组织。
  - 为什么会有repo和gerrit，还是要先回头说一下git：因为 git 在最初设计的时候，作者希望的是做一个SCM（Source Code Management）的核心，这样其他人就可以在这个核心上面开发各种 SCM。虽然他后来做着做着，就做成了一个功能完整的 SCM，但这并不影响其最初的设计：Google于是在git的基础上开发了repo和gerrit。

  * Gerrit是什么：
  - 基于 Web 的代码评审和项目管理的工具，面向基于 Git 版本控制系统；
  - 为 Git 引入强制性的代码审核机制，非特别的授权设置，向 Git 版本库的推送（Push）必须要经过 Gerrit 服务器，经过审核流程后，才能正式纳入代码库；
  - 每一次提交将对应一个评审任务;
  - 通过特殊的分支提交评审任务（refs/for/….); 
  - Gerrit 提供的 Git 服务的端口并非标准的 22 端口，缺省是 29418 端口；
  - Gerrit缺省的Http端口是8080。

  * Repo是什么
  - repo是基于git工具的知识库管理系统工具，该工具可以统一管理git知识库并提交源码到版本管理系统，使得Android项目的开发流程自动化。
  - repo并不意味着替代git工具，它仅使得工作更加简单。
  - repo命令是python脚本，可以放到任何路径下。涉及到网络操作时可以使用该工具，比如使用单个repo命令可以下载多个知识库到本地。
  - repo 在实际使用中主要担任2个角色：
         - 和主代码服务器（gerrit）进行交互
         - 根据 .repo库下面的xml（manifest.xml）来管理多个 git 仓库
  - repo相关细节和安装分别 请参考  [[git:repo|Repo]]  &   [[linux:搭建工作环境:安装repo|安装 Repo]]

  * Gerrit全局权限描述
Code Review  审核
  - +2 批准
  - +1 通过审核，待批准
  - 0  可以查看代码，评述，但不可评分
  - -1  最好不要提交
  - -2  不可提交
Verified     编译
  - +1 编译成功
  - -1 编译失败
Read Access  读写权限
  -  +2 可提交代码
  - +1  可下载代码
  - -1  不可下载
