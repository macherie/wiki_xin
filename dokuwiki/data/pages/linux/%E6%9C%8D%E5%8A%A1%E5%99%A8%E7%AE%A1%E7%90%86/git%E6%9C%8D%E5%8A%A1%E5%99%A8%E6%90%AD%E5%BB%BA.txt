--- //[[shu.yin@sim.com|尹姝]] 2014/9/10//
====== Git服务器搭建 ======
=====1、 安装ubuntu系统 =====
=====2、 安装x11vnc远程管理=====
[[linux:服务器管理:安装x11vnc远程管理|安装 x11vnc 远程管理]]

=====3、 安装openssh服务器端=====
[[linux:服务器管理:安装openssh的服务器端|安装 openssh 服务器端]]



=====4、 安装git daemon=====
[[linux:服务器管理:安装git_daemon|安装 git daemon]]

=====5、 安装gitweb=====
[[linux:服务器管理:安装gitweb|安装 gitweb]]

=====6、 安装java=====
[[linux:搭建工作环境:安装java|安装 Java 6]]

=====7、 安装gerrit=====
[[linux:服务器管理:安装gerrit|安装 gerrit]]

=====8、 问题解决=====
====1. 服务器不接显示器远程vnc连接不上，服务器端错误如下：====
<code>
The System is running in low-graphics mode
Your screen, graphics card, and input device settings cound not be detected correctly. You will need to configure these yourself.
</code>
解决方法如下：
<code>
cd /etc/X11
sudo cp xorg.conf.failsafe xorg.conf
</code>
reboot重启就好了

====2. 开启git外网同步功能：====
使用智能HTTP协议
查看文件git-http-backend的安装位置，可以用如下命令。
Ls $(git –exec-path)/git-http-backend
更改Apache的配置文件：
sudo vim /etc/apache2/sites-available/default
<code>
<VirtualHost *:80>
        ServerAdmin webmaster@localhost

        DocumentRoot /var/www
        <Directory />
                Options FollowSymLinks
                AllowOverride None
        </Directory>
        <Directory /var/www/>
                Options Indexes FollowSymLinks MultiViews
                AllowOverride None
                Order allow,deny
                allow from all
        </Directory>

        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
        <Directory "/usr/lib/cgi-bin">
                AllowOverride None
                Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
                Order allow,deny
                Allow from all
        </Directory>
</code>

加入
<code>
        #Git configuration
        SetEnv GIT_PROJECT_ROOT /home/git
        SetEnv GIT_HTTP_EXPORT_ALL
        SetEnv REMOTE_USER=$REDIRECT_REMOTE_USER

        # This pattern matches git operations and passes them to http-backend
        ScriptAliasMatch \
                "(?x)^/git/(.*/(HEAD | \
                        info/refs | \
                        objects/(info/[^/]+ | \
                                [0-9a-f]{2}/[0-9a-f]{38} | \
                                pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
                                git-(upload|receive)-pack))$" \
        /usr/lib/git-core/git-http-backend/$1

        # Anything not matched above goes to displayable gitweb interface
        ScriptAlias /git /usr/share/gitweb/gitweb.cgi/

        # Git repository # Read-Only
        <LocationMatch "^/git/.*/git-receive-pack$">
                #Write access
                AuthType Basic
                AuthName "git repository"
                AuthUserFile /etc/apache2/gitAuth/Authfile
                Require valid-user
        </LocationMatch>
</code>

<code>
        ErrorLog ${APACHE_LOG_DIR}/error.log

        # Possible values include: debug, info, notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn

        CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
</code>

说明： 
<color red>SetEnv GIT_PROJECT_ROOT</color>设置版本库的根目录为/home/git

<color red>SetEnv GIT_HTTP_EXPORT_ALL</color>设置所有版本库均可访问，无论在版本库中是否存在git-daemon-export-ok文件。默认只有在版本库目录中存在git-daemon-export-ok文件时，该版本库才可以访问。这个文件是git-daemon服务的一个特性。