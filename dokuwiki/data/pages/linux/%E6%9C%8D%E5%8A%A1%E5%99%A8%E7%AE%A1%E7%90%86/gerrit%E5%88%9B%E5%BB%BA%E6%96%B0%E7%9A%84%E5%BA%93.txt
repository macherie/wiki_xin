====== 1.在gerrit新建库 ======

 **<color red>此功能只有管理员才可操作。若已存在库，可直接操作无需创建</color>**

====== 方法一 ======
===== 1.新建git库 =====
git 用户进入服务器，在/home/git/repositories/目录下，新建自己需要的库，也可新建多目录的库\\ 

git init --bare xxx xxx为新建库的名称 \\ 

比如 git init --bare art 新建art库 \\ 
git init --bare package/art  在package/目录下新建art库 \\ 

==== 关联gerrit ====
切换到gerrit用户，在/home/gerrit2/review_site/git/目录下。

ln -s /home/git/repositories/xxx 就关联上了。

====== 方法二 ======
==== 下载gitolite-admin ====
若本地没有可以下方式下载
<code>git clone git@192.167.100.232:gitolite-admin.git</code>
==== 添加库 ====
**1.  vim conf/gitolite.conf** \\ 

**2. 例如添加新的库platform/frameworks/opt/bluetooth<color red>(新建库的名称)</color>**
<code>repo    platform/frameworks/opt/bluetooth
               R       =   @all
               RW+     =   gerrit2</code>

**3.提交** \\ 
 git add -m "XXXX"  \\ 
 git push \\ 
如此之后在gerrit服务器上将创建一个platform/frameworks/opt/bluetooth库

==== 本地代码推送到gerrit服务器 ====
**1.代码路径** \\ 
cd frameworks/opt/bluetooth \\

**2. 创建本地** \\
git init 初始化库\\
git add -A 添加所有\\ 
git commit -m "XXXX"\\ 

**3.推送到服务器**  \\ 
git push ssh://kun.mao@192.167.100.232:29418/platform/frameworks/opt/bluetooth HEAD:refs/heads/<color red>服务器上分支名(一般以平台或项目命名，如8939_L，Q39_L)</color>  \\ 

**4.repo管理** \\ 
可参考以往项目创建.repo/manifests目录，并新建default.xml。\\ 
<?xml version="1.0" encoding="UTF-8"?>\\ 
<manifest>\\ 
  <remote fetch="git@192.167.100.232:/" name="sim" review="http://192.167.100.232:8080"/>\\ 
  <default remote="sim" revision="<color red>服务器上分支名</color>"/>\\ 
  <project name="platform/frameworks/opt/bluetooth" path="frameworks/opt/bluetooth"/>\\ 
</manifest>


               


