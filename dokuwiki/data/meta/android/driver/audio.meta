a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1390478357;s:8:"modified";i:1390476864;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:27:"音频相关零碎知识点";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:27:"音频相关零碎知识点";s:5:"title";s:27:"音频相关零碎知识点";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:602:"音频相关零碎知识点

	*  硬件拓扑图



	*  硬件接口数据流向图



	*  软件接口数据流向图



	*  播放音频（Audio Playback）大致步骤
1、Framework 调用 OpenMAX IL 把比特流（未解码的二进制）传给 aDSP。
2、aDSP把接收到的比特流（未解码的二进制）解码成PCM然后回传给OpenMAX IL（Framework）。
3、Framework通过AudioFlinger把PCM传递到audio的HAL层，audio HAL再把PCM传递到kernel。
4、PCM的kernel driver再把PCM回传给aDSP。
5、aDSP最后把PCM传递给D/A codec转换成模拟信号输出到speaker。…";}s:8:"relation";a:2:{s:5:"media";a:5:{s:28:"android:driver:hw_blocks.png";b:1;s:36:"android:driver:hw_blocks_diagram.png";b:1;s:28:"android:driver:sw_blocks.png";b:1;s:37:"android:driver:audiohardware_flow.png";b:1;s:28:"android:driver:mdsp_flow.png";b:1;}s:10:"firstimage";s:28:"android:driver:hw_blocks.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1390478357;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}