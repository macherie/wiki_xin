
<h1 class="sectionedit1" id="android休眠失败">Android休眠失败</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Android休眠失败" [1-34] -->
<h2 class="sectionedit2" id="android查看wakelocks占用">Android查看wakelocks占用:</h2>
<div class="level2">

<p>
用串口抓cat /proc/wakelocks &gt; wakelocks.cap,然后用下面命令过滤<br/>

</p>
<pre class="code">cat wakelocks.cap | awk &#039;{print $1 &quot; &quot; $5}&#039; | grep -v &quot; 0&quot; | grep -v active</pre>

<p>
 (过滤出第5位不是0不是列名的行)
</p>

<p>
如果/proc/wakelocks不存在，挂载debugfs,
</p>
<pre class="code">mount -t debugfs debugfs /sys/kernel/debug</pre>

<p>
查看wakeup_sources有同样效果
</p>
<pre class="code">adb shell cat /sys/kernel/debug/wakeup_sources &gt; wake.txt
cat wake.txt | awk &#039;{print $1 &quot; &quot; $5}&#039; | grep -v &quot; 0&quot; | grep -v active</pre>

<p>
查看应用层的锁
</p>
<pre class="code">root@s55:/ # cat /sys/power/wake_lock                                          
PowerManagerService.Display PowerManagerService.WakeLocks</pre>

</div>
<!-- EDIT2 SECTION "Android查看wakelocks占用:" [35-752] -->
<h2 class="sectionedit3" id="make_crach_进入_download_mode">Make crach 进入 Download mode</h2>
<div class="level2">
<pre class="code">echo c &gt; /proc/sysrq-trigger</pre>

<p>
<br/>

<br/>

</p>

</div>
<!-- EDIT3 SECTION "Make crach 进入 Download mode" [753-848] -->
<h2 class="sectionedit4" id="附wakeup_sources详解">附:wakeup_sources详解</h2>
<div class="level2">

<p>
<strong>1、wakeup_sources</strong><br/>

kernel wakelock和userspace wakelock都有可能阻止系统睡眠。所有的wakeup_sources均保存在sys节点/sys/kernel/debug/wakeup_sources里面。<br/>

该文件包含了如下信息：<br/>

（1）the total amount of time a wakeup source has prevented suspend<br/>

（2）the amount of time a wakelock has been active since the last activation etc. The unit of time is milliseconds.<br/>

<br/>

<strong>2、active_since</strong><br/>

active_since值可以用来确认wakelock是否正在阻止休眠。如果该值不是零，那么这个wakelock正在工作并且阻止休眠。<br/>

<br/>

<strong>3、获取wakeup_sources的命令</strong>        <br/>

</p>
<pre class="code">adb root 67754400
adb remount
adb shell
cat /sys/kernel/debug/wakeup_sources &gt; /data/wakeup_sources.txt
adb pull /data/wakeup_sources.txt </pre>

<p>
获得wakeup_sources.txt以后，通过Excel打开，active_since不为0的项为wakeup source。以表2为例，msm_dwc3对应的active-since值481756&gt;0，这意味着msm_dwc3驱动在阻止系统睡眠，下一步需要检查msm_dwc3驱动代码及相关log。        <br/>

<br/>

<strong>4、power:wakeup_source_activate and power:wakeup_source_deactivate events</strong>        <br/>

当一个wakeup source被acquire或者release时候，power:wakeup_source_activate和power:wakeup_source_deactivate event将随即被写到trace buffer里面，这样可以记录wakeup source被driver使用的频率。        <br/>

开启该功能的方法：        <br/>

</p>
<pre class="code">echo “power:wakeup_source_activate power:wakeup_source_deactivate” &gt; /sys/kernel/debug/tracing/set_event</pre>

<p>
The power:wakeup_source_activate and power:wakeup_source_deactivate events are written to the trace buffer any time a wakeup source is acquired or released and it can provide information on how often a wakeup source is being used by a driver.        <br/>

To enable these events, you can enable following:        <br/>

</p>
<pre class="code">echo “power:wakeup_source_activate power:wakeup_source_deactivate” &gt; /sys/kernel/debug/tracing/set_event </pre>

<p>
Once the above done, the traces will be present in /sys/kernel/debug/tracing/trace.
</p>

</div>
<!-- EDIT4 SECTION "附:wakeup_sources详解" [849-] -->