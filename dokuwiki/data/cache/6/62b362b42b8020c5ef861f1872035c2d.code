@Override
<span class="kw1">public</span> <span class="kw4">void</span> onDrawFrame<span class="br0">&#40;</span>GL10 glUnused<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp;
    ...
&nbsp;
    <span class="me1">mTextureUniformHandle</span> <span class="sy0">=</span> GLES20.<span class="me1">glGetUniformLocation</span><span class="br0">&#40;</span>mProgramHandle, <span class="st0">&quot;u_Texture&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    mTextureCoordinateHandle <span class="sy0">=</span> GLES20.<span class="me1">glGetAttribLocation</span><span class="br0">&#40;</span>mProgramHandle, <span class="st0">&quot;a_TexCoordinate&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">// Set the active texture unit to texture unit 0.</span>
    GLES20.<span class="me1">glActiveTexture</span><span class="br0">&#40;</span>GLES20.<span class="me1">GL_TEXTURE0</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">// Bind the texture to this unit.</span>
    GLES20.<span class="me1">glBindTexture</span><span class="br0">&#40;</span>GLES20.<span class="me1">GL_TEXTURE_2D</span>, mTextureDataHandle<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">// Tell the texture uniform sampler to use this texture in the shader by binding to texture unit 0.</span>
    GLES20.<span class="me1">glUniform1i</span><span class="br0">&#40;</span>mTextureUniformHandle, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>