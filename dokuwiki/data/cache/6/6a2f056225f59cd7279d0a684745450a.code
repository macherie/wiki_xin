<span class="kw4">struct</span> e1000_desc_ring <span class="br0">&#123;</span>     
       <span class="kw4">void</span> <span class="sy0">*</span>desc<span class="sy0">;</span>            <span class="coMULTI">/* 指向描述符环状缓冲区的指针。*/</span>      
       dma_addr_t dma<span class="sy0">;</span>  <span class="coMULTI">/* 描述符环状缓冲区物理地址，也就是DMA缓冲区地址*/</span>
       <span class="kw4">unsigned</span> <span class="kw4">int</span> size<span class="sy0">;</span>    <span class="coMULTI">/* 描述符环状缓冲区的长度（用字节表示）*/</span>      
       <span class="kw4">unsigned</span> <span class="kw4">int</span> count<span class="sy0">;</span> <span class="coMULTI">/* 缓冲区内描述符的数量，这个是系统初始化时规定好的，它决定该环形缓冲区有多少描述符（或者说缓冲区）可用*/</span>
       <span class="kw4">unsigned</span> <span class="kw4">int</span> next_to_use<span class="sy0">;</span> <span class="coMULTI">/* 下一个要使用的描述符。*/</span>
       <span class="kw4">unsigned</span> <span class="kw4">int</span> next_to_clean<span class="sy0">;</span> <span class="coMULTI">/* 下一个待删除描述符。*/</span> 
       <span class="kw4">struct</span> e1000_buffer <span class="sy0">*</span>buffer_info<span class="sy0">;</span> <span class="coMULTI">/* 缓冲区信息结构数组。*/</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">static</span> <span class="kw4">int</span> e1000_setup_rx_resources<span class="br0">&#40;</span><span class="kw4">struct</span> e1000_adapter <span class="sy0">*</span>adapter<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
       <span class="coMULTI">/*将环形缓冲区取下来*/</span>
       <span class="kw4">struct</span> e1000_desc_ring <span class="sy0">*</span>rxdr <span class="sy0">=</span> <span class="sy0">&amp;</span>adapter<span class="sy0">-&gt;</span>rx_ring<span class="sy0">;</span>
       <span class="kw4">struct</span> pci_dev <span class="sy0">*</span>pdev <span class="sy0">=</span> adapter<span class="sy0">-&gt;</span>pdev<span class="sy0">;</span>
       <span class="kw4">int</span> size<span class="sy0">;</span>
&nbsp;
       size <span class="sy0">=</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> e1000_buffer<span class="br0">&#41;</span> <span class="sy0">*</span> rxdr<span class="sy0">-&gt;</span>count<span class="sy0">;</span>
       <span class="coMULTI">/*
       为每一个描述符缓冲区分配内存，缓冲区的数量由count决定。
       */</span>
       rxdr<span class="sy0">-&gt;</span>buffer_info <span class="sy0">=</span> kmalloc<span class="br0">&#40;</span>size<span class="sy0">,</span> GFP_KERNEL<span class="br0">&#41;</span><span class="sy0">;</span>
       <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>rxdr<span class="sy0">-&gt;</span>buffer_info<span class="br0">&#41;</span> <span class="br0">&#123;</span>
              <span class="kw1">return</span> <span class="sy0">-</span>ENOMEM<span class="sy0">;</span>
       <span class="br0">&#125;</span>
       <a href="http://www.opengroup.org/onlinepubs/009695399/functions/memset.html"><span class="kw3">memset</span></a><span class="br0">&#40;</span>rxdr<span class="sy0">-&gt;</span>buffer_info<span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> size<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
       <span class="coMULTI">/* Round up to nearest 4K */</span>
&nbsp;
       rxdr<span class="sy0">-&gt;</span>size <span class="sy0">=</span> rxdr<span class="sy0">-&gt;</span>count <span class="sy0">*</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> e1000_rx_desc<span class="br0">&#41;</span><span class="sy0">;</span>
       E1000_ROUNDUP<span class="br0">&#40;</span>rxdr<span class="sy0">-&gt;</span>size<span class="sy0">,</span> <span class="nu0">4096</span><span class="br0">&#41;</span><span class="sy0">;</span>
       <span class="coMULTI">/*
       调用pci_alloc_consistent（）函数为系统分配DMA缓冲区。
       */</span>
       rxdr<span class="sy0">-&gt;</span>desc <span class="sy0">=</span> pci_alloc_consistent<span class="br0">&#40;</span>pdev<span class="sy0">,</span> rxdr<span class="sy0">-&gt;</span>size<span class="sy0">,</span> <span class="sy0">&amp;</span>rxdr<span class="sy0">-&gt;</span>dma<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
       <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>rxdr<span class="sy0">-&gt;</span>desc<span class="br0">&#41;</span> <span class="br0">&#123;</span>
              kfree<span class="br0">&#40;</span>rxdr<span class="sy0">-&gt;</span>buffer_info<span class="br0">&#41;</span><span class="sy0">;</span>
              <span class="kw1">return</span> <span class="sy0">-</span>ENOMEM<span class="sy0">;</span>
       <span class="br0">&#125;</span>
       <a href="http://www.opengroup.org/onlinepubs/009695399/functions/memset.html"><span class="kw3">memset</span></a><span class="br0">&#40;</span>rxdr<span class="sy0">-&gt;</span>desc<span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> rxdr<span class="sy0">-&gt;</span>size<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
       rxdr<span class="sy0">-&gt;</span>next_to_clean <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
       rxdr<span class="sy0">-&gt;</span>next_to_use <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
       <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">&#125;</span>