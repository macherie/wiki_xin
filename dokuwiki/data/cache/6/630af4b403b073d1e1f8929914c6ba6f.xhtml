
<h1 class="sectionedit1" id="分段录像方案中间层实现">分段录像方案中间层实现</h1>
<div class="level1">

<p>
研发平台：MT6735
</p>

</div>
<!-- EDIT1 SECTION "分段录像方案中间层实现" [1-70] -->
<h3 class="sectionedit2" id="一_方案概述">一、方案概述</h3>
<div class="level3">

1.1&nbsp;&nbsp;为上层提供分段录像的API，通过层层调用最终在MPEG4Writer.cpp中具体实现不漏秒，不漏帧的分段录像方案<BR><BR>

</div>
<!-- EDIT2 SECTION "一、方案概述" [71-274] -->
<h3 class="sectionedit3" id="二_mpeg4writercpp介绍">二、MPEG4Writer.cpp介绍</h3>
<div class="level3">

2.1&nbsp;&nbsp;三个主要线程：<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;video轨迹线程：接收视频源得到的视频帧数据，维护视频轨迹的索引信息，当收到的帧数据达到一定数量后，将数据链表中的视频帧打包成chunk<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;audio轨迹线程：接收音频源得到的音频帧数据，维护音频轨迹的索引信息，当收到的帧数据达到一定数量后，将数据链表中的音频帧打包成chunk<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写线程：将轨迹线程打包好的chunk数据写入文件<BR><BR>
2.2&nbsp;&nbsp;录像实现流程：<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.录像开始：开启视频、音频两个轨迹线程，开启写线程，将头部信息写入文件。轨迹线程将收到的帧数据打包，通知写线程将chunk数据写入文件。<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.录像结束：将轨迹线程中数据链表中的数据打包成chunk，通知写线程将所有未写入文件的chunk写入文件，停止轨迹线程，将轨迹线程的索引信息写入文件尾部，视频文件封装完成。<BR><BR>

</div>
<!-- EDIT3 SECTION "二、MPEG4Writer.cpp介绍" [275-1458] -->
<h3 class="sectionedit4" id="三_分段方案详述">三、分段方案详述</h3>
<div class="level3">

&nbsp;&nbsp;基于MPEG4Writer原有逻辑，改造轨迹线程和写线程实现分段方案<BR>
3.1&nbsp;&nbsp;轨迹线程改造<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.视频轨迹收到分段信号，判断当前帧是否关键帧，不是则继续等待，是则通知音频轨迹分段。<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.将数据链表中的数据打包成chunk，记录当前时间戳为分段时间戳。<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.将当前轨迹线程的索引信息，Durationtime等关键信息传递给对应的分段索引，分段Durationtime<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.将当前轨迹线程的一些变量恢复到初始状态，以保证当前帧作为第一帧被处理<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.记录当前轨迹线程分段处理完成<BR><BR>
3.1&nbsp;&nbsp;写线程改造<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.收到分段信号，判断当前chunk的时间戳，小于分段时间戳：将当前chunk写入文件，等于分段时间戳:将当前chunk写入文件并记录视（音）频最后chunk写入完成，大于分段时间戳:不处理。<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.视频和音频轨迹的最后chunk都已经写入文件,将轨迹线程保存的分段索引信息写入文件尾部。<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.关闭当前文件，打开下一分段视频文件，将写线程的关键变量重置，写入视频文件头部信息，关闭分段状态。<BR>

</div>
<!-- EDIT4 SECTION "三、分段方案详述" [1459-2951] -->
<h3 class="sectionedit5" id="四_关键代码">四、关键代码</h3>
<div class="level3">

3.1&nbsp;&nbsp;轨迹线程改造<BR>
<pre class="code c"> <span class="co1">//start  seperate</span>
        <span class="kw1">if</span><span class="br0">&#40;</span>mOwner<span class="sy0">-&gt;</span>getflagRestart<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
            bool flag<span class="sy0">=</span><span class="kw2">false</span><span class="sy0">;</span>
            <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>mIsAudio<span class="br0">&#41;</span><span class="br0">&#123;</span>
                <span class="kw1">if</span><span class="br0">&#40;</span>mOwner<span class="sy0">-&gt;</span>getflagTrackRestart<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
                    <span class="kw1">if</span><span class="br0">&#40;</span>isSync<span class="sy0">!=</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
                        flag<span class="sy0">=</span><span class="kw2">true</span><span class="sy0">;</span>
                        mOwner<span class="sy0">-&gt;</span>setflagAudioTrackRestart<span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span><span class="kw1">else</span><span class="br0">&#123;</span>
                <span class="kw1">if</span><span class="br0">&#40;</span>mOwner<span class="sy0">-&gt;</span>getflagAudioTrackRestart<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
                    flag<span class="sy0">=</span><span class="kw2">true</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
                <span class="kw1">if</span><span class="br0">&#40;</span>flag<span class="br0">&#41;</span><span class="br0">&#123;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;Restart :%s &quot;</span><span class="sy0">,</span> trackName<span class="br0">&#41;</span><span class="sy0">;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;Restart :mChunkSamples%d&quot;</span><span class="sy0">,</span> mChunkSamples.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
                    <span class="co1">//record enveriment</span>
                      mStartTimestampUs_Restart<span class="sy0">=</span>mStartTimestampUs<span class="sy0">;</span>
                      mMinCttsOffsetTimeUs_restart<span class="sy0">=</span>mMinCttsOffsetTimeUs<span class="sy0">;</span>
                      mMaxCttsOffsetTimeUs__restart<span class="sy0">=</span>mMaxCttsOffsetTimeUs<span class="sy0">;</span>
                      mStszTableEntries_resart<span class="sy0">=</span>mStszTableEntries<span class="sy0">;</span>
                      mStcoTableEntries_restart<span class="sy0">=</span> mStcoTableEntries<span class="sy0">;</span>
                      mStscTableEntries_restart<span class="sy0">=</span> mStscTableEntries<span class="sy0">;</span>
                      mStssTableEntries_restart<span class="sy0">=</span> mStssTableEntries<span class="sy0">;</span>
                      mSttsTableEntries_restart<span class="sy0">=</span>mSttsTableEntries<span class="sy0">;</span>
                      mCttsTableEntries_restart<span class="sy0">=</span>mCttsTableEntries<span class="sy0">;</span>
                      mCo64TableEntries_restart<span class="sy0">=</span>mCo64TableEntries<span class="sy0">;</span>
                      mTrackDurationUs_restart<span class="sy0">=</span>mTrackDurationUs<span class="sy0">;</span>
&nbsp;
                      <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>mIsAudio<span class="br0">&#41;</span><span class="br0">&#123;</span>
                        mOwner<span class="sy0">-&gt;</span>setStartTimestampUsRestart<span class="br0">&#40;</span>mOwner<span class="sy0">-&gt;</span>getStartTimestampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        mOwner<span class="sy0">-&gt;</span>ResetStartTimestampUs<span class="br0">&#40;</span>0ll<span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                        mTrackRestartDone<span class="sy0">=</span><span class="kw2">true</span><span class="sy0">;</span>
                        <span class="co1">//bufferchunk</span>
                    <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>mChunkSamples.<span class="me1">empty</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
                        <span class="kw4">int</span> tmptimeStampUs<span class="sy0">=</span>lastTimestampUs<span class="sy0">;</span>
                        addOneStscTableEntry<span class="br0">&#40;</span><span class="sy0">++</span>nChunks<span class="sy0">,</span> mChunkSamples.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        bufferChunk<span class="br0">&#40;</span>tmptimeStampUs<span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="co1">/////////////////////</span>
                        <span class="co1">/////////////////////</span>
                        mRestartbufferchunkStampUs<span class="sy0">=</span>tmptimeStampUs<span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                    <span class="kw1">else</span><span class="br0">&#123;</span>
                        mRestartbufferchunkStampUs<span class="sy0">=</span>chunkTimestampUs<span class="sy0">;</span>
                        <span class="kw1">if</span><span class="br0">&#40;</span>mWritenFileTimestamp<span class="sy0">==</span>mRestartbufferchunkStampUs<span class="br0">&#41;</span><span class="br0">&#123;</span>
                            <span class="kw1">if</span><span class="br0">&#40;</span>isAudio<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
                                ALOGI<span class="br0">&#40;</span><span class="st0">&quot;Audio chunk already writen&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                                mOwner<span class="sy0">-&gt;</span>setflagAudioDone<span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span><span class="kw1">else</span><span class="br0">&#123;</span>
                                ALOGI<span class="br0">&#40;</span><span class="st0">&quot;Vedio chunk already writen&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                                mOwner<span class="sy0">-&gt;</span>setflagVedioDone<span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="br0">&#125;</span>
                        <span class="br0">&#125;</span>
                      <span class="br0">&#125;</span>
                      <span class="co1">// We don't really know how long the last frame lasts, since</span>
                      <span class="co1">// there is no frame time after it, just repeat the previous</span>
                      <span class="co1">// frame's duration.</span>
                     <span class="kw1">if</span> <span class="br0">&#40;</span>mStszTableEntries<span class="sy0">-&gt;</span>count<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
<span class="co2">#ifdef MTK_AOSP_ENHANCEMENT //Do not set duration to 0 even if there is only one frame in this track</span>
		        ALOGW<span class="br0">&#40;</span><span class="st0">&quot;Only one frame in %s track, Set scaled duration to 1&quot;</span><span class="sy0">,</span> mIsAudio<span class="sy0">?</span> <span class="st0">&quot;audio&quot;</span><span class="sy0">:</span> <span class="st0">&quot;video&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		        <span class="kw1">if</span> <span class="br0">&#40;</span>mTimeScale <span class="sy0">&gt;=</span> 1000000LL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
			    lastDurationUs <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
		        <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
			    lastDurationUs <span class="sy0">=</span> <span class="br0">&#40;</span>1000000LL <span class="sy0">+</span> <span class="br0">&#40;</span>mTimeScale <span class="sy0">&gt;&gt;</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">/</span> mTimeScale<span class="sy0">;</span>
		        <span class="br0">&#125;</span>
		        lastDurationTicks <span class="sy0">=</span> <span class="br0">&#40;</span>lastDurationUs <span class="sy0">*</span> mTimeScale <span class="sy0">+</span> <span class="nu19">5E5</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu19">1E6</span><span class="sy0">;</span>
<span class="co2">#else</span>
                        lastDurationUs <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>  <span class="co1">// A single sample's duration</span>
                        lastDurationTicks <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="co2">#endif</span>
                        <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                            <span class="sy0">++</span>sampleCount<span class="sy0">;</span>  <span class="co1">// Count for the last sample</span>
                        <span class="br0">&#125;</span>
                        <span class="kw1">if</span> <span class="br0">&#40;</span>mStszTableEntries<span class="sy0">-&gt;</span>count<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&lt;=</span> <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                            addOneSttsTableEntry<span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">,</span> lastDurationTicks<span class="br0">&#41;</span><span class="sy0">;</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>sampleCount <span class="sy0">-</span> <span class="nu0">1</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                                addOneSttsTableEntry<span class="br0">&#40;</span>sampleCount <span class="sy0">-</span> <span class="nu0">1</span><span class="sy0">,</span> lastDurationTicks<span class="br0">&#41;</span><span class="sy0">;</span>
                             <span class="br0">&#125;</span>
                         <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                             addOneSttsTableEntry<span class="br0">&#40;</span>sampleCount<span class="sy0">,</span> lastDurationTicks<span class="br0">&#41;</span><span class="sy0">;</span>
                         <span class="br0">&#125;</span>
&nbsp;
                         <span class="co1">// The last ctts box may not have been written yet, and this</span>
                         <span class="co1">// is to make sure that we write out the last ctts box.</span>
                         <span class="kw1">if</span> <span class="br0">&#40;</span>currCttsOffsetTimeTicks <span class="sy0">==</span> lastCttsOffsetTimeTicks<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                            <span class="kw1">if</span> <span class="br0">&#40;</span>cttsSampleCount <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                                addOneCttsTableEntry<span class="br0">&#40;</span>cttsSampleCount<span class="sy0">,</span> lastCttsOffsetTimeTicks<span class="br0">&#41;</span><span class="sy0">;</span>
                                <span class="br0">&#125;</span>
                            <span class="br0">&#125;</span>
&nbsp;
                         mTrackDurationUs_restart<span class="sy0">+=</span> lastDurationUs<span class="sy0">;</span>
                         mReachedEOS <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span>
                         sendTrackSummary<span class="br0">&#40;</span>hasMultipleTracks<span class="br0">&#41;</span><span class="sy0">;</span>
                         ALOGI<span class="br0">&#40;</span><span class="st0">&quot;Received total/0-length (%d/%d) buffers and encoded %d frames. - %s&quot;</span><span class="sy0">,</span>
                            count<span class="sy0">,</span> nZeroLengthFrames<span class="sy0">,</span> mStszTableEntries<span class="sy0">-&gt;</span>count<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> trackName<span class="br0">&#41;</span><span class="sy0">;</span>
                         ALOGI<span class="br0">&#40;</span><span class="st0">&quot;counttest:%d - %s&quot;</span><span class="sy0">,</span>counttst<span class="sy0">,</span> trackName<span class="br0">&#41;</span><span class="sy0">;</span>
                         ALOGI<span class="br0">&#40;</span><span class="st0">&quot;mchunsamplerecieve:%d - %s&quot;</span><span class="sy0">,</span>mchunsamplerecieve<span class="sy0">,</span> trackName<span class="br0">&#41;</span><span class="sy0">;</span>
                         <span class="kw1">if</span> <span class="br0">&#40;</span>mIsAudio<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                            ALOGI<span class="br0">&#40;</span><span class="st0">&quot;Audio track drift time: %&quot;</span> PRId64 <span class="st0">&quot; us&quot;</span><span class="sy0">,</span> mOwner<span class="sy0">-&gt;</span>getDriftTimeUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                         <span class="br0">&#125;</span>
&nbsp;
                      <span class="co1">//reset varible</span>
                      mStszTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mStcoTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mCo64TableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>off64_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mStscTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mStssTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mSttsTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mCttsTableEntries<span class="sy0">=</span>new ListTableEntries<span class="sy0">&lt;</span>uint32_t<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#41;</span><span class="sy0">;</span>
                      mStartTimestampUs<span class="sy0">=-</span><span class="nu0">1</span><span class="sy0">;</span>
                      mTrackDurationUs<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>
                      <span class="co1">//reset local var</span>
                      count <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
                      chunkTimestampUs <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                      nChunks <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                      nZeroLengthFrames <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                      lastTimestampUs <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>      <span class="co1">// Previous sample time stamp</span>
                      lastDurationUs <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>       <span class="co1">// Between the previous two samples</span>
                      currDurationTicks <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>    <span class="co1">// Timescale based ticks</span>
                      lastDurationTicks <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>    <span class="co1">// Timescale based ticks</span>
                      sampleCount <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>          <span class="co1">// Sample count in the current stts table entry</span>
                      previousSampleSize <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>  <span class="co1">// Size of the previous sample</span>
                      previousPausedDurationUs <span class="sy0">=</span> lastSouceTimestampUs<span class="sy0">;</span>
                      cttsOffsetTimeUs <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                      currCttsOffsetTimeTicks <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>   <span class="co1">// Timescale based ticks</span>
                      lastCttsOffsetTimeTicks <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>  <span class="co1">// Timescale based ticks</span>
                      cttsSampleCount <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>           <span class="co1">// Sample count in the current ctts table entry</span>
                      lastSamplesPerChunk <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                      mMdatSizeBytes<span class="sy0">=</span>sampleSize<span class="sy0">;</span>
&nbsp;
                      <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>mIsAudio<span class="br0">&#41;</span><span class="br0">&#123;</span>
                        mOwner<span class="sy0">-&gt;</span>setflagTrackRestart<span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span><span class="kw1">else</span><span class="br0">&#123;</span>
                        mOwner<span class="sy0">-&gt;</span>setflagAudioTrackRestart<span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                        flag<span class="sy0">=</span><span class="kw2">false</span><span class="sy0">;</span>
&nbsp;
                        <span class="br0">&#125;</span>
                <span class="br0">&#125;</span></pre>

3.2&nbsp;&nbsp;写线程改造<BR>
<pre class="code c"><span class="kw4">void</span> MPEG4SegWriter<span class="sy0">::</span><span class="me2">threadFunc</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    ALOGV<span class="br0">&#40;</span><span class="st0">&quot;threadFunc&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    prctl<span class="br0">&#40;</span>PR_SET_NAME<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="br0">&#41;</span><span class="st0">&quot;MPEG4SegWriter&quot;</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co2">#ifdef MTK_AOSP_ENHANCEMENT</span>
    androidSetThreadPriority<span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> ANDROID_PRIORITY_DISPLAY<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// -4, to have favorable IO priority</span>
<span class="co2">#endif</span>
    Mutex<span class="sy0">::</span><span class="me2">Autolock</span> autoLock<span class="br0">&#40;</span>mLock<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span>mDone<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        Chunk chunk<span class="sy0">;</span>
        bool chunkFound <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
&nbsp;
        <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span>mDone <span class="sy0">&amp;&amp;</span> <span class="sy0">!</span><span class="br0">&#40;</span>chunkFound <span class="sy0">=</span> findChunkToWrite<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
            mChunkReadyCondition.<span class="me1">wait</span><span class="br0">&#40;</span>mLock<span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
&nbsp;
        <span class="co1">// In real time recording mode, write without holding the lock in order</span>
        <span class="co1">// to reduce the blocking time for media track threads.</span>
        <span class="co1">// Otherwise, hold the lock until the existing chunks get written to the</span>
        <span class="co1">// file.</span>
        <span class="kw1">if</span> <span class="br0">&#40;</span>chunkFound<span class="br0">&#41;</span> <span class="br0">&#123;</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mIsRealTimeRecording<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                mLock.<span class="me1">unlock</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
            ALOGD<span class="br0">&#40;</span><span class="st0">&quot;chunk.mTimeStampUs %&quot;</span>PRId64<span class="st0">&quot;&quot;</span><span class="sy0">,</span>chunk.<span class="me1">mTimeStampUs</span><span class="br0">&#41;</span><span class="sy0">;</span>
            ALOGD<span class="br0">&#40;</span><span class="st0">&quot;bufferchunkStampUs %&quot;</span>PRId64<span class="st0">&quot;&quot;</span><span class="sy0">,</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mRestart<span class="sy0">&amp;&amp;</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>chunk.<span class="me1">mTimeStampUs</span><span class="sy0">&lt;=</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    <span class="kw1">if</span> <span class="br0">&#40;</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">-</span>chunk.<span class="me1">mTimeStampUs</span><span class="sy0">&lt;</span>2000000LL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        writeChunkToFile<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
            <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                 writeChunkToFile<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="kw1">if</span> <span class="br0">&#40;</span>mIsRealTimeRecording<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                mLock.<span class="me1">lock</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="co1">///////////////////////////////////////////////</span>
            <span class="co1">//qidongran add</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mRestart<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                 ALOGD<span class="br0">&#40;</span><span class="st0">&quot;threadFunc&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>mAudioDone <span class="sy0">&amp;&amp;</span> mVedioDone<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;all Done&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//write moov box</span>
                    writeMoovBoxforRestart<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//close file</span>
                     close<span class="br0">&#40;</span>mFd<span class="br0">&#41;</span><span class="sy0">;</span>
                     mFd <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>
                     ALOGD<span class="br0">&#40;</span><span class="st0">&quot;close mfd %d&quot;</span><span class="sy0">,</span>mFd<span class="br0">&#41;</span><span class="sy0">;</span>
                     notify<span class="br0">&#40;</span>MEDIA_RECORDER_EVENT_INFO<span class="sy0">,</span> <span class="nu0">999</span><span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//write header</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;write header begin&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    mOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mMdatOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mWriteMoovBoxToMemory <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mMoovBoxBuffer <span class="sy0">=</span> NULL<span class="sy0">;</span>
                    mMoovBoxBufferOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mFd <span class="sy0">=</span> mswitchFd<span class="sy0">;</span>
                    <span class="co2">#ifdef USE_FILE_CACHE</span>
	                mWriterCacheSize <span class="sy0">=</span> DEFAULT_FILE_CACHE_SIZE<span class="sy0">;</span>
	                <span class="kw4">char</span> param1<span class="br0">&#91;</span>PROPERTY_VALUE_MAX<span class="br0">&#93;</span><span class="sy0">;</span>
	                <span class="kw4">int32_t</span> value1<span class="sy0">;</span>
	                property_get<span class="br0">&#40;</span><span class="st0">&quot;vr.writer.cache.size&quot;</span><span class="sy0">,</span> param1<span class="sy0">,</span> <span class="st0">&quot;-1&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	                value1 <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html"><span class="kw3">atoi</span></a><span class="br0">&#40;</span>param1<span class="br0">&#41;</span><span class="sy0">;</span>
	                ALOGD<span class="br0">&#40;</span><span class="st0">&quot;value1=%d&quot;</span><span class="sy0">,</span> value1<span class="br0">&#41;</span><span class="sy0">;</span>
	                <span class="kw1">if</span><span class="br0">&#40;</span><span class="br0">&#40;</span>value1 <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#40;</span>value1 <span class="sy0">&lt;</span> LOW_MEM_PROTECT_THRESHOLD<span class="br0">&#41;</span><span class="br0">&#41;</span>
	                <span class="br0">&#123;</span>
		            mWriterCacheSize <span class="sy0">=</span> value1<span class="sy0">;</span>
	                <span class="br0">&#125;</span>
	                ALOGD<span class="br0">&#40;</span><span class="st0">&quot;@@[RECORD_PROPERTY]writer.cache.size = %d&quot;</span><span class="sy0">,</span> mWriterCacheSize<span class="br0">&#41;</span><span class="sy0">;</span>
	                mCacheWriter <span class="sy0">=</span> new MPEG4SegFileCacheWriter<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mWriterCacheSize<span class="br0">&#41;</span><span class="sy0">;</span>
	                CHECK<span class="br0">&#40;</span>mCacheWriter <span class="sy0">!=</span> NULL<span class="br0">&#41;</span><span class="sy0">;</span>
	                mCacheWriter<span class="sy0">-&gt;</span>setOwner<span class="br0">&#40;</span>this<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co2">#endif</span>
                    writeFtypBox<span class="br0">&#40;</span>mRestartParam<span class="br0">&#41;</span><span class="sy0">;</span>
                    mFreeBoxOffset <span class="sy0">=</span> mOffset<span class="sy0">;</span>
&nbsp;
                    <span class="kw1">if</span> <span class="br0">&#40;</span>mEstimatedMoovBoxSize <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        <span class="kw4">int32_t</span> bitRate <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>
                        <span class="kw1">if</span> <span class="br0">&#40;</span>mRestartParam<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                            mRestartParam<span class="sy0">-&gt;</span>findInt32<span class="br0">&#40;</span>kKeyBitRate<span class="sy0">,</span> <span class="sy0">&amp;</span>bitRate<span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                        mEstimatedMoovBoxSize <span class="sy0">=</span> estimateMoovBoxSize<span class="br0">&#40;</span>bitRate<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
&nbsp;
                    CHECK_GE<span class="br0">&#40;</span>mEstimatedMoovBoxSize<span class="sy0">,</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
                    <span class="kw1">if</span> <span class="br0">&#40;</span>mStreamableFile<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    <span class="co1">// Reserve a 'free' box only for streamable file</span>
<span class="co2">#if defined(MTK_AOSP_ENHANCEMENT) &amp;&amp; defined(USE_FILE_CACHE)</span>
		mCacheWriter<span class="sy0">-&gt;</span>seek<span class="br0">&#40;</span>mFreeBoxOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#else</span>
        lseek64<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mFreeBoxOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
                    writeInt32<span class="br0">&#40;</span>mEstimatedMoovBoxSize<span class="br0">&#41;</span><span class="sy0">;</span>
                     write<span class="br0">&#40;</span><span class="st0">&quot;free&quot;</span><span class="sy0">,</span> <span class="nu0">4</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    mMdatOffset <span class="sy0">=</span> mFreeBoxOffset <span class="sy0">+</span> mEstimatedMoovBoxSize<span class="sy0">;</span>
                     <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                        mMdatOffset <span class="sy0">=</span> mOffset<span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;mMdatOffset=%d, mOffset=%d&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mMdatOffset<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mOffset<span class="br0">&#41;</span><span class="sy0">;</span>
                    mOffset <span class="sy0">=</span> mMdatOffset<span class="sy0">;</span>
<span class="co2">#if defined(MTK_AOSP_ENHANCEMENT) &amp;&amp; defined(USE_FILE_CACHE)</span>
	mCacheWriter<span class="sy0">-&gt;</span>seek<span class="br0">&#40;</span>mMdatOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#else</span>
    lseek64<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mMdatOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
                     <span class="kw1">if</span> <span class="br0">&#40;</span>mUse32BitOffset<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        write<span class="br0">&#40;</span><span class="st0">&quot;????mdat&quot;</span><span class="sy0">,</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy0">;</span>
                       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                            write<span class="br0">&#40;</span><span class="st0">&quot;<span class="es2">\x00</span><span class="es2">\x00</span><span class="es2">\x00</span><span class="es2">\x01</span>mdat????????&quot;</span><span class="sy0">,</span> <span class="nu0">16</span><span class="br0">&#41;</span><span class="sy0">;</span>
                       <span class="br0">&#125;</span>
                       ALOGD<span class="br0">&#40;</span><span class="st0">&quot;mMdatOffset=%d, mOffset=%d&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mMdatOffset<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mOffset<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//reset status</span>
                    mRestart <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mtrackRestart <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mVedioDone <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mAudioDone <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    <span class="kw1">for</span> <span class="br0">&#40;</span>List<span class="sy0">&lt;</span>Track <span class="sy0">*&gt;::</span><span class="me2">iterator</span> it <span class="sy0">=</span> mTracks.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            it <span class="sy0">!=</span> mTracks.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy0">++</span>it<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setDurationUsRestart<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setTrackRestartDone<span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
            <span class="br0">&#125;</span>
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span>
&nbsp;
    writeAllChunks<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#ifdef MTK_AOSP_ENHANCEMENT</span>
	mWriterThreadExit <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span>
	mWriterThreadExitCondition.<span class="me1">signal</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	ALOGD<span class="br0">&#40;</span><span class="st0">&quot;writer thread exit&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
<span class="br0">&#125;</span></pre>

</div>
<!-- EDIT5 SECTION "四、关键代码" [2952-] -->