
<p>
1.普通数组：
</p>

<p>
定义数组
array=(1 2 3 4 5)   <strong>注意元素之间不能有逗号</strong>
</p>

<p>
打印数组元素：
</p>

<p>
echo ${array[0]}
</p>

<p>
1
</p>

<p>
echo ${array[4]}
</p>

<p>
5
</p>

<p>
全部打印：
</p>

<p>
echo ${array[*]}
</p>

<p>
1 2 3 4 5
</p>

<p>
echo ${array[@]} <strong>@方式是作为整体输出，而*方式是单个分别输出</strong>
</p>

<p>
1 2 3 4 5
</p>

<p>
打印数组长度：
</p>

<p>
echo ${#array[@]}
</p>

<p>
5
</p>

<p>
数组中各个元素可以单独定义： 
</p>

<p>
array[1]=“2”
</p>

<p>
array[2]=“3”
</p>

<p>
array[4]=“4”
</p>

<p>
echo ${array[3]}
</p>

<p>
echo ${array[4]}
</p>

<p>
4
</p>

<p>
2.关联数组：
</p>

<p>
<strong>support by bash 4.0 or later</strong>
</p>

<p>
定义关联数组：
</p>

<p>
首先需要声明一个变量，作为关联数组：
</p>

<p>
declare -A array_new 
</p>

<p>
赋值：
</p>

<p>
同普通数组一样，关联数组可以使用内嵌（索引-值列表）方法赋值，也可以单独为元素赋值：
</p>

<p>
array_new=([egg]=10 [noodles]=20)
</p>

<p>
echo ${array_new[egg]}           
</p>

<p>
10
</p>

<p>
echo ${array_new[noodles]}
</p>

<p>
20
</p>

<p>
其他使用方法和普通数组是一样的：
</p>

<p>
${array_new[*]}      
</p>

<p>
20 10
</p>

<p>
echo ${array_new[@]}
</p>

<p>
20 10
</p>

<p>
echo ${#array_new[@]}
</p>

<p>
2
</p>

<p>
此外，还可以打印数组索引列表：
</p>

<p>
echo ${!array_new[*]}
</p>

<p>
noodles egg
</p>

<p>
echo ${!array_new[@]}
</p>

<p>
noodles egg
</p>
