
<h1 class="sectionedit1" id="q平台控制是否显示camera图标">8625Q平台控制是否显示camera图标</h1>
<div class="level1">

<p>
此方法可以应用到其他程序中
</p>

<p>
1——&gt; packages/apps/Camera/rc/com/android/camera/DisableCameraReceiver.java
</p>

<p>
该Receiver用以监听系统完全启动后，检测camera设备数(num&gt;0表示存在)是否存在camera设备，并根据是否存在camera决定加载或者不加载camera应用。
主要要注意的方法
</p>
<pre class="code">  private static final String ACTIVITIES[] = {
      &quot;com.android.camera.CameraLauncher&quot;}; //AndroidManifset.xml中的&lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;
                                              设置camera在launcher中启动的android:name
  
  public void onReceive(Context context, Intent intent) {
      .....
      // Disable this receiver so it won&#039;t run again.
      disableComponent(context, &quot;com.android.camera.DisableCameraReceiver&quot;);
      //这是取消加载该Receiver，也就是只有第一次启动设备后，以后启动设备，该Receiver组件不会再加载，也就是该组件将不会启动。
      每次恢复出厂设置后，重启后都只会启动一次。若camera设备减少,增加或出硬件问题，重启机器后都不会改变。
      去掉该段代码，每次开机后都会去检测camera设备数，来决定加载或不加载camera应用，更灵活，但camera设备硬件出问题
      后重启机器不会加载camera应用。
  }</pre>
<pre class="code">  //不加载控件
  private void disableComponent(Context context, String klass) {
      ComponentName name = new ComponentName(context, klass);
      PackageManager pm = context.getPackageManager();
      pm.setComponentEnabledSetting(name,
          PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
          PackageManager.DONT_KILL_APP);
  }</pre>
<pre class="code">  //加载控件
  private void enableComponent(Context context, String klass) {
      ComponentName name = new ComponentName(context, klass);
      PackageManager pm = context.getPackageManager();
      pm.setComponentEnabledSetting(name,
          PackageManager.COMPONENT_ENABLED_STATE_ENABLED,
          PackageManager.DONT_KILL_APP);
  }</pre>

<p>
2——&gt; packages/apps/Gallery2/Androidmanifset.xml
camera的配置项在Gallery2中，方便二者之间的数据交互。
</p>
<pre class="code">      &lt;activity-alias android:icon=&quot;@mipmap/ic_launcher_camera&quot;
                      android:label=&quot;@string/camera_label&quot;
                      android:name=&quot;com.android.camera.CameraLauncher&quot;
                      android:targetActivity=&quot;com.android.camera.Camera&quot; &gt;
          &lt;intent-filter&gt;
              &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
              &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
              &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
          &lt;/intent-filter&gt;
      &lt;/activity-alias&gt;
      //加载在launcher中camera的入口类名。
      </pre>

<p>
3——&gt; packages/apps/Gallery2# cd src/com/android/gallery3d/util/GalleryUtils.java
设置Gallery中的方法类。其中也包括判断是否存在camera。
</p>
<pre class="code">  private static final String CAMERA_LAUNCHER_NAME = &quot;com.android.camera.CameraLauncher&quot;;
  public static boolean isCameraAvailable(Context context) {
      if (sCameraAvailableInitialized) return sCameraAvailable;
      PackageManager pm = context.getPackageManager();
      ComponentName name = new ComponentName(context, CAMERA_LAUNCHER_NAME);
      int state = pm.getComponentEnabledSetting(name);
      sCameraAvailableInitialized = true;
      sCameraAvailable =
          (state == PackageManager.COMPONENT_ENABLED_STATE_DEFAULT)
           || (state == PackageManager.COMPONENT_ENABLED_STATE_ENABLED);
      return sCameraAvailable;
  }
  //该方法是获取应用中是否存在camera应用。若不存在则在gallery中去除camera的入口。</pre>

</div>
