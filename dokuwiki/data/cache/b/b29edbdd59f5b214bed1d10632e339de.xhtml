
<h2 class="sectionedit1" id="sepolicy规则">sepolicy规则</h2>
<div class="level2">

<p>
selunx,seandroid规则
</p>

<p>
较详细的规则可以查看：
<a href="/dokuwiki/doku.php?id=android:172.21.1.23_dokuwiki_doku.php&amp;id=linux:selinux:selinux添加策略" class="wikilink2" title="android:172.21.1.23_dokuwiki_doku.php" rel="nofollow">172.21.1.23/dokuwiki/doku.php</a>
</p>

</div>
<!-- EDIT1 SECTION "sepolicy规则" [1-155] -->
<h3 class="sectionedit2" id="节点访问权限">1. 节点访问权限</h3>
<div class="level3">

<p>
&lt;5&gt;[77037.274119] [(2015-01-20 09:17:42.876329323 UTC)] [cpuid: 2] type=1400 audit(1421745462.859:2172964): avc:  denied  { <span style='color:green; '><strong>write</strong></span> } for  pid=15848<br/>

comm=“system_server” name=“enable” dev=“sysfs” ino=9381 scontext=u:r:<span style='color:blue; '><strong>zygote</strong></span>:s0 tcontext=u:object_r:<span style='color:red; '><strong>sysfs</strong></span>:s0 tclass=<span style='color:fuchsia; '><strong>file</strong></span>
</p>

<p>
&lt;5&gt;[77037.841329] [(2015-01-20 09:17:43.443539322 UTC)] [cpuid: 0] type=1400 audit(1421745463.429:2172966): avc:  denied  { <span style='color:green; '>open</span> } for  pid=15871<br/>

comm=“ActivityManager” name=“stat” dev=“proc” ino=5513 scontext=u:r:<span style='color:blue; '>zygote</span>:s0 tcontext=u:r:<span style='color:red; '>init</span>:s0 tclass=<span style='color:fuchsia; '>file</span>
</p>

<p>
&lt;5&gt;[77037.912449] [(2015-01-20 09:17:43.514659321 UTC)] [cpuid: 2] type=1400 audit(1421745463.509:2172968): avc:  denied  { <span style='color:green; '>open</span> } for  pid=15871<br/>

comm=“ActivityManager” name=“stat” dev=“proc” ino=5515 scontext=u:r:<span style='color:blue; '>zygote</span>:s0 tcontext=u:r:<span style='color:red; '>kernel</span>:s0 tclass=<span style='color:fuchsia; '>file</span>
</p>

<p>
这种情况可能发生在代码中fork一个进程或者调用system()函数进行read/write某个file时就会出现这些denied，使得操作无法进行。<br/>

那么如何处理这些denied信息，我们拿上面的log作为例子，可以在extern/sepolicy下新建一个test.te文件（这个目录下的te文件会自动全部加入编译），比如
</p>

<p>
<strong>test.te</strong><br/>

allow <span style='color:blue; '>&lt;scontext&gt;</span> <span style='color:red; '>&lt;tcontext&gt;</span>:<span style='color:fuchsia; '>&lt;tclass&gt;</span>  <span style='color:green; '>&lt;operation&gt;</span><br/>

<strong>1. allow <span style='color:blue; '><strong>zygote</strong></span>  <span style='color:red; '><strong>sysfs</strong></span>:<span style='color:fuchsia; '><strong>file</strong></span>  <span style='color:green; '><strong>write</strong></span>; #解释:允许源上下文类型是<span style='color:blue; '>zygote</span>的进程对目的上下文类型是<span style='color:red; '>sysfs</span>的<span style='color:fuchsia; '>file</span>进行<span style='color:green; '>write</span>操作</strong>
</p>
<pre class="code">2. allow zygote init:file open;

3. allow zygote kernel:file open;</pre>

<p>
这样就可以保证上面的log中就不会再出现这些denied了。
</p>

</div>
<!-- EDIT2 SECTION "1. 节点访问权限" [156-2239] -->
<h3 class="sectionedit3" id="验证修改">2. 验证修改</h3>
<div class="level3">

<p>
编译之后，直接查看这个文件就可以。
</p>
<pre class="code">out/target/product/q39/obj/ETC/sepolicy_intermediates/policy.conf</pre>

</div>
<!-- EDIT3 SECTION "2. 验证修改" [2240-2397] -->
<h3 class="sectionedit4" id="查看进程和文件的sepolicy属性">3. 查看进程和文件的sepolicy属性</h3>
<div class="level3">
<pre class="code">shell@TCL_M3G:/ $ ps -Z                                                        
LABEL                          USER     PID   PPID  NAME
u:r:init:s0                    root      1     0     /init
u:r:kernel:s0                  root      2     0     kthreadd
u:r:kernel:s0                  root      3     2     ksoftirqd/0
u:r:kernel:s0                  root      5     2     kworker/0:0H
u:r:kernel:s0                  root      6     2     kworker/u16:0
u:r:kernel:s0                  root      7     2     migration/0

shell@TCL_M3G:/ $ ls -Z
drwxr-xr-x root             root              u:object_r:cgroup:s0 acct
drwxrwx--- system      cache           u:object_r:cache_file:s0 cache
lrwxrwxrwx root           root              u:object_r:rootfs:s0 charger -&gt; /sbin/healthd
dr-x------ root                 root              u:object_r:rootfs:s0 config
lrwxrwxrwx root           root              u:object_r:rootfs:s0 d -&gt; /sys/kernel/debug
drwxrwx--x system      system        u:object_r:system_data_file:s0 data</pre>

</div>
<!-- EDIT4 SECTION "3. 查看进程和文件的sepolicy属性" [2398-] -->