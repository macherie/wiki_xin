a:35:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"如下： ";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"1.  依次读取变量“MAKEFILES”定义的 makefile 文件列表 ";}i:2;i:13;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:82;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:82;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:166:"2.  读取工作目录下的 makefile 文件（根据命名的查找顺序“GNUmakefile”，“makefile”，“Makefile” ，首先找到那个就读取那个） ";}i:2;i:84;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:250;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:250;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"3.  依次读取工作目录 makefile 文件中使用指示符“include”包含的文件 ";}i:2;i:252;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:343;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:343;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:224:"4.  查找重建所有已读取的 makefile 文件的规则（如果存在一个目标是当前读取的某一个 makefile 文件，则执行此规则重建此 makefile 文件，完成以后从第一步开始重新执行） ";}i:2;i:345;}i:15;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:569;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:569;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"5.  初始化变量值并展开那些需要立即展开的变量和函数并根据预设条件确定执行分支 ";}i:2;i:571;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:684;}i:19;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:684;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"6.  根据“终极目标”以及其他目标的依赖关系建立依赖关系链表 ";}i:2;i:686;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:772;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:772;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:200:"7.  执行除“终极目标”以外的所有的目标的规则（规则中如果依赖文件中任一个文件的时间戳比目标文件新，则使用规则所定义的命令重建目标文件） ";}i:2;i:774;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:974;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:974;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"8.  执行“终极目标”所在的规则 ";}i:2;i:976;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1020;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1020;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"执行一个规则的过程： ";}i:2;i:1022;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1053;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1053;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:523:"对于一个存在的规则（明确规则和隐含规则）首先，make程序将比较目标文件和所有的依赖文件的时间戳。如果目标的时间戳比所有依赖文件的时间戳更新（依赖文件在上一次执行make之后没有被修改），那么什么也不做。否则（依赖文件中的某一个或者全部在上一次执行make后已经被修改过），规则所定义的重建目标的命令将会被执行。这就是make工作的基础，也是其执行规制所定义命令的依据。";}i:2;i:1055;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1055;}i:34;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1055;}}