a:92:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"在yocto平台（for freescale）中实现交叉编译具体步骤如下：";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:76;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:76;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"如i.mx 6ul为例";}i:2;i:78;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:96;}i:7;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:96;}i:8;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:96;}i:9;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:96;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" 一.生成编译工具链";}i:2;i:100;}i:11;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:126;}i:12;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:126;}i:13;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:126;}i:14;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:126;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:"在平台根目录下输入 MACHINE=imx6ulevk source fsl-setup-release.sh -b build -e fb";}i:2;i:128;}i:16;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:216;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:216;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"进入build目录后输入 bitbake meta-toolchain 生成工具链运行脚本";}i:2;i:218;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:295;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:295;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"生成的脚本目录./build/tmp/deploy/sdk/";}i:2;i:297;}i:22;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:341;}i:23;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:341;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:136:"运行poky-glibc-x86_64-meta-toolchain-cortexa7hf-vfp-neon-toolchain-1.8.sh 会让你选择工具链生成目录默认为 /opt/poky/1.8/";}i:2;i:343;}i:25;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:480;}i:26;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:480;}i:27;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:480;}i:28;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:480;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" 二.设置环境变量";}i:2;i:484;}i:30;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:507;}i:31;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:507;}i:32;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:507;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:507;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"执行 source /opt/poky/1.8/environment-setup-cortexa7hf-vfp-neon-poky-linux-gnueabi";}i:2;i:509;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:593;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:593;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"然后输入echo $CC";}i:2;i:595;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:615;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:615;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:"如果显示  arm-poky-linux-gnueabi-gcc -march=armv7-a -mfloat-abi=hard -mfpu=neon -mtune=cortex-a7 ";}i:2;i:617;}i:41;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:718;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"sysroot=/opt/poky/1.8/sysroots/cortexa7hf-vfp-neon-poky-linux-gnueabi  则表示交叉编译环境设置成功。";}i:2;i:720;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:834;}i:44;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:834;}i:45;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:834;}i:46;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:834;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 三.交叉编译程序源码包";}i:2;i:838;}i:48;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:870;}i:49;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:870;}i:50;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:870;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:870;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"以pppd源码包为例：";}i:2;i:872;}i:53;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:897;}i:54;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:897;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"1.解压下载的pppd源码包";}i:2;i:899;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:929;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:929;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"2.在源码包根目录下运行./configure 生成相关的Makefile";}i:2;i:931;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:998;}i:60;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:998;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"3.修改源码包中的Makefile   需要把有 CC = gcc 之类的注释掉，让CC使用环境变量中的交叉编译工具";}i:2;i:1000;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1124;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1124;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"4.运行make生成可执行文件，然后把该文件通过添加层的方式copy到image的rootfs中";}i:2;i:1126;}i:65;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1228;}i:66;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1228;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"如果是一些由configure生成Makefile的源码包，如libcurl，在设置完交叉编译工具链后，输入./configure ";}i:2;i:1230;}i:68;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:1356;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"host=arm-poky-linux-gnueabi 来生成交叉编译的Makefile";}i:2;i:1358;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1418;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1418;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:387:"注：在交叉编译过程，会碰到有些源码包用系统的gcc能编译，换了交叉编译工具编译就会报错的问题。
如在编译iproute2的源码包时，由于交叉编译工具缺少对汇编asm的头文件支持，导致编译arpd命令的时候会报错，但是由于用不到arpd命令，且此时可执行文件ip已生成，所以可以直接移植ip命令。";}i:2;i:1420;}i:73;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1808;}i:74;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1808;}i:75;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1808;}i:76;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1808;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" 四.添加可执行文件/sh脚本到image";}i:2;i:1812;}i:78;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1855;}i:79;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1855;}i:80;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1855;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1855;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"新建层meta-com808";}i:2;i:1857;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1877;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1877;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"复制文件至source目录下meta-com808/recipes-example/example/elmo-com808-0.1/";}i:2;i:1879;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1961;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1961;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"修改meta-com808/recipes-example/example目录下elmo-com808_0.1.bb文件";}i:2;i:1963;}i:89;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2043;}i:90;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:295:"
SRC_URI = "...\
	file://xxx \     #添加这句才会在编译时把source文件夹下新添加的文件载入
"
...

do_install() {
	     install -d ${D}${bindir} #把SRC_URI 中的文件copy到rootfs的usr/bin目录
             ...
	     install -m 0755 XXX ${D}${bindir}   #添加权限
}

";i:1;s:4:"bash";i:2;N;}i:2;i:2043;}i:91;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2043;}}