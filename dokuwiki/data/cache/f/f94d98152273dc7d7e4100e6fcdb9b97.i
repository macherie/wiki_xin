a:57:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:514:"MEMWATCH 由 Johan Lindh 编写，是一个开放源代码 C 语言内存错误检测工具，您可以自己下载它（请参阅本文后面部分的 参考资料）。只要在代码中添加一个头文件并在 gcc 语句中定义了 MEMWATCH 之后，您就可以跟踪程序中的内存泄漏和错误了。MEMWATCH 支持 ANSI C，它提供结果日志纪录，能检测双重释放（double-free）、错误释放（erroneous free）、没有释放的内存（unfreed memory）、溢出和下溢等等。 ";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:515;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:515;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"清单 1. 内存样本（test1.c）";}i:2;i:517;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:552;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:552;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"#include <stdlib.h>
#include <stdio.h>
#include ";}i:2;i:554;}i:9;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:602;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"memwatch.h";}i:2;i:603;}i:11;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:613;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"
int main(void)
{";}i:2;i:614;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:631;}i:14;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:100:"char *ptr1;
char *ptr2;
ptr1 = malloc(512);
ptr2 = malloc(512);
ptr2 = ptr1;
free(ptr2);
free(ptr1);";}i:2;i:631;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:631;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"}";}i:2;i:747;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:748;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:748;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:215:"清单 1 中的代码将分配两个 512 字节的内存块，然后指向第一个内存块的指针被设定为指向第二个内存块。结果，第二个内存块的地址丢失，从而产生了内存泄漏。";}i:2;i:750;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:965;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:965;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"现在我们编译清单 1 的 memwatch.c。下面是一个 makefile 示例：";}i:2;i:967;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1045;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1045;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"test1";}i:2;i:1047;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1052;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1052;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:"gcc -DMEMWATCH -DMW_STDIO test1.c memwatch
c -o test1";}i:2;i:1054;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1107;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1107;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:"当您运行 test1 程序后，它会生成一个关于泄漏的内存的报告。清单 2 展示了示例 memwatch.log 输出文件。";}i:2;i:1109;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1244;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1244;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"清单 2. test1 memwatch.log 文件";}i:2;i:1246;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1282;}i:36;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:49:"MEMWATCH 2.67 Copyright (C) 1992-1999 Johan Lindh";}i:2;i:1282;}i:37;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1282;}i:38;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1335;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"
double-free: <4> test1.c(15), 0x80517b4 was freed from test1.c(14)
";}i:2;i:1338;}i:40;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1406;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"
unfreed: <2> test1.c(11), 512 bytes at 0x80519e4
{FE FE FE FE FE FE FE FE FE FE FE FE ";}i:2;i:1409;}i:42;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1496;}i:43;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1499;}i:44;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1502;}i:45;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1505;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"..}
Memory usage statistics (global):";}i:2;i:1508;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1545;}i:48;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:125:"N)umber of allocations made: 	2
L)argest memory usage : 	1024
T)otal of all alloc() calls: 	1024
U)nfreed bytes totals : 	512";}i:2;i:1545;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1545;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:282:"MEMWATCH 为您显示真正导致问题的行。如果您释放一个已经释放过的指针，它会告诉您。对于没有释放的内存也一样。日志结尾部分显示统计信息，包括泄漏了多少内存，使用了多少内存，以及总共分配了多少内存。";}i:2;i:1681;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1963;}i:52;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1963;}i:53;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:30:":linux:skill:memwatch-2.71.rar";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:1966;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:2001;}i:55;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2001;}i:56;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2001;}}