
<h1 class="sectionedit1" id="录像一段时间后会自动停止问题">录像一段时间后会自动停止问题</h1>
<div class="level1">

<p>
<strong>用UCAM录像一段时间后会自动停止，查一下看是UCAM的问题还是我们系统问题。</strong>
</p>

<p>
测试发现用UCAM每次录像到27.04min录像自动停掉，用我们自己的Camera发现每次录到38.24min会自动停掉，
</p>

<p>
仔细看录像的详细信息发现两个的resolution不一样，但是大小均是3.8G，这样问题就定位到录像最大文件大小限制了。
</p>

</div>
<!-- EDIT1 SECTION "录像一段时间后会自动停止问题" [1-451] -->
<h2 class="sectionedit2" id="libmediaplayerservice_stagefrightrecordercpp">libmediaplayerservice/StagefrightRecorder.cpp</h2>
<div class="level2">

<p>
void StagefrightRecorder::setupMPEG4MetaData
</p>

<p>
(int64_t startTimeUs, int32_t totalBitRate,sp&lt;MetaData&gt; *meta){
</p>
<pre class="code">  (*meta)-&gt;setInt64(kKeyTime, startTimeUs);
  (*meta)-&gt;setInt32(kKeyFileType, mOutputFormat);
  (*meta)-&gt;setInt32(kKeyBitRate, totalBitRate);
  (*meta)-&gt;setInt32(kKey64BitFileOffset, mUse64BitFileOffset);//use 64bit file offset
  if (mMovieTimeScale &gt; 0) {
      (*meta)-&gt;setInt32(kKeyTimeScale, mMovieTimeScale);
  }
  if (mTrackEveryTimeDurationUs &gt; 0) {
      (*meta)-&gt;setInt64(kKeyTrackTimeStatus, mTrackEveryTimeDurationUs);
  }
  if (mRotationDegrees != 0) {
      (*meta)-&gt;setInt32(kKeyRotation, mRotationDegrees);
  }</pre>

<p>
}
</p>

</div>
<!-- EDIT2 SECTION "libmediaplayerservice/StagefrightRecorder.cpp" [452-1177] -->
<h2 class="sectionedit3" id="frameworks_av_media_libstagefright_mpeg4writercpp">frameworks/av/media/libstagefright/MPEG4Writer.cpp</h2>
<div class="level2">

<p>
static const int64_t kMax64BitFileSize = 0x00ffffffffLL; \/\/fat32 max size limited to 4GB
</p>

<p>
status_t MPEG4Writer::start(MetaData *param) {
</p>
<pre class="code">if (mInitCheck != OK) {
      return UNKNOWN_ERROR;
  }</pre>
<pre class="code">  /*
   * Check mMaxFileSizeLimitBytes at the beginning
   * since mMaxFileSizeLimitBytes may be implicitly
   * changed later for 32-bit file offset even if
   * user does not ask to set it explicitly.
   */
  if (mMaxFileSizeLimitBytes != 0) {
      mIsFileSizeLimitExplicitlyRequested = true;
  }</pre>
<pre class="code">  int32_t use64BitOffset = 0;
  if (param &amp;&amp;
      param-&gt;findInt32(kKey64BitFileOffset, &amp;use64BitOffset) &amp;&amp;
      use64BitOffset) {
      mUse32BitOffset = false;
      if (mMaxFileSizeLimitBytes == 0) {
          mMaxFileSizeLimitBytes = kMax64BitFileSize;//max file limit bytes use 64bit file offset
      }
 ............</pre>

<p>
}
</p>

<p>
bool MPEG4Writer::exceedsFileSizeLimit() {
</p>
<pre class="code">  // No limit
  if (mMaxFileSizeLimitBytes == 0) {
      return false;
  }</pre>
<pre class="code">  int64_t nTotalBytesEstimate = static_cast&lt;int64_t&gt;(mEstimatedMoovBoxSize);
  for (List&lt;Track *&gt;::iterator it = mTracks.begin();
       it != mTracks.end(); ++it) {
      nTotalBytesEstimate += (*it)-&gt;getEstimatedTrackSizeBytes();
  }</pre>
<pre class="code">  if (!mStreamableFile) {
      // Add 1024 bytes as error tolerance
      return nTotalBytesEstimate + 1024 &gt;= mMaxFileSizeLimitBytes;
  }
  // Be conservative in the estimate: do not exceed 95% of
  // the target file limit. For small target file size limit, though,
  // this will not help.
  return (nTotalBytesEstimate &gt;= (95 * mMaxFileSizeLimitBytes) / 100);</pre>

<p>
}
</p>

<p>
<strong>通过以上代码可发现，录像理论的最大大小是4G，系统取4G*95%=3.8G作为实际最大大小限制。</strong>
把95改为10后，进行录像到0.4G时停掉，即验证猜想。
</p>

</div>
<!-- EDIT3 SECTION "frameworks/av/media/libstagefright/MPEG4Writer.cpp" [1178-] -->