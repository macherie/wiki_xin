
<p>
 — <em><a href="mailto:&#x73;&#x68;&#x75;&#x2e;&#x79;&#x69;&#x6e;&#x40;&#x73;&#x69;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;" class="mail" title="&#x73;&#x68;&#x75;&#x2e;&#x79;&#x69;&#x6e;&#x40;&#x73;&#x69;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;">尹姝</a> 2013/12/09</em>
</p>

<h1 class="sectionedit1" id="打开android_c_文件中的log">打开Android C++文件中的LOG</h1>
<div class="level1">

<p>
在C++文件中，打开LOG需要加入如下代码：
</p>
<pre class="code">#define LOG_TAG &quot;AndroidRuntime&quot;
#include &lt;utils/Log.h&gt;</pre>

<p>
默认情况下ALOGE是打开的。
</p>

<p>
可以一次打开ALOGV，ALOGI，ALOGD，也可以分别打开：
</p>
<pre class="code">#undef NDEBUG       //打开ALOGV/ALOGI/ALOGD
#define LOG_NDEBUG   0  //打开ALOGV
#define LOG_NIDEBUG  0  //打开ALOGI
#define LOG_NDDEBUG 0 //打开ALOGD</pre>

</div>
<!-- EDIT1 SECTION "打开Android C++文件中的LOG" [48-500] -->
<h2 class="sectionedit2" id="举例">举例</h2>
<div class="level2">

<p>
举例，如果要看AndroidRuntime的ALOGI和ALOGD，可以有这样2种写法：
</p>

</div>
<!-- EDIT2 SECTION "举例" [501-604] -->
<h3 class="sectionedit3" id="方法一">方法一</h3>
<div class="level3">

<p>
NDEBUG-LOG_NDEBUG=LOG_NIDEBUG +LOG_NIDEBUG
</p>
<pre class="code">#define LOG_TAG &quot;AndroidRuntime&quot;
#undef NDEBUG
#define LOG_NDEBUG 1
#include &lt;utils/Log.h&gt;</pre>

</div>
<!-- EDIT3 SECTION "方法一" [605-775] -->
<h3 class="sectionedit4" id="方法二">方法二</h3>
<div class="level3">

<p>
LOG_NIDEBUG +LOG_NIDEBUG
</p>
<pre class="code">#define LOG_TAG &quot;AndroidRuntime&quot;
#define LOG_NIDEBUG 0
#define LOG_NDDEBUG 0
#include &lt;utils/Log.h&gt;</pre>

</div>
<!-- EDIT4 SECTION "方法二" [776-] -->