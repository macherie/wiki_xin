a:43:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"为什么在编译工程时使用make不会出错而使用make -j4会出现错误？？？？？？？？？？？？？";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:121;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:121;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"有以下两种可能：";}i:2;i:123;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:147;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:147;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:208:"1.在同一时刻可能会存在多个命令执行进程同时读取标准输入，但是对于标准输入设备来说，在同一时刻只能存在一个进程访问它。就是说在某个时间点， make";}i:2;i:150;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:358;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:358;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:204:"只能保证此刻正在执行的进程中的一个进程读取标准输入流，而其它进程的标准输入流将置无效。因此在一时刻多个执行命令的进程中只能有一个进程获得";}i:2;i:360;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:564;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:564;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:"标准输入，而其它需要读取标准输入流的进程由于输入流无效而导致致命错误（通常此进程会得到操作系统的管道破裂信号而被终止）。 ";}i:2;i:566;}i:15;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:747;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:747;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:207:"这是因为：执行中的命令在什么时候会读取标准输入流（终端输入或重定向的标准输入）是不可预测的。而得到标准输入的顺序总是按照先来先获得的原则。";}i:2;i:750;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:957;}i:19;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:957;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:204:"那个命令首先被执行，那么它就可以首先得到标准输入设备。而其它后续需要获取标准输入设备的命令执行进程，由于不能得到标准输入而产生致命错误。";}i:2;i:959;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1163;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1163;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"在 Makefile 规则中如果存在很多命令需要读取标准输入设备，而它们又被允许并行执行时，就会出现这样的错误。 ";}i:2;i:1165;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1314;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1314;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"2.会导致make的递归调用出现问题";}i:2;i:1321;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1363;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1363;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:173:"当make在执行命令时，如果某一条命令执行失败（被一个信号中止，或非零退出），且该条命令产生的错误不可忽略 ，那么其它的用";}i:2;i:1365;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1538;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1538;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:111:"于重建同一目标的命令执行也将会被终止。此种情况下，如果make没有使用“-k”或“";}i:2;i:1540;}i:33;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:1651;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"keep-going”选项，make将停止执行而退";}i:2;i:1653;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1700;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1700;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:"出。另外：如果make在执行时，由某种原因（包括信号）被中止，此时它的子进程（那些执行规则命令行的shell子进程）正在运行，那么make将等到所有这些子进程结束之";}i:2;i:1702;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1922;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1922;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"后才真正退出。 ";}i:2;i:1924;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1946;}i:42;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1946;}}