
<h1 class="sectionedit1" id="制作logo和开机动画">制作LOGO和开机动画</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "制作LOGO和开机动画" [1-40] -->
<h2 class="sectionedit2" id="logo的修改与控制">LOGO的修改与控制</h2>
<div class="level2">

<p>
LOGO文件vendor/qcom/opensource/qrdplus/QRDExtensions/DynamicComponents/res/Splash_QRD/中，
其中xxxx.raw保存的文件即是不同项目的开机LOGO.（一般raw文件名和项目名相同）
</p>

<p>
<strong><span style='color:teal; '>1. </span></strong>xxxx.raw文件的转换
</p>
<pre class="code">convert -depth 8 logo.png bgr:xxxx.raw</pre>

<p>
<strong><span style='color:teal; '>2. </span></strong>vendor/qcom/opensource/qrdplus/QRDExtensions/DynamicComponents/res/Splash_QRD/Android.mk
</p>
<pre class="code">BOOTLOGO_FILE := vendor/qcom/opensource/qrdplus/QRDExtensions/DynamicComponents/res/Splash_QRD/$(QRDExt_BootLogo_gp).raw
QRDExt_BootLogo_gp 为宏控的定义的xxxx.raw文件</pre>

<p>
<strong><span style='color:teal; '>3. </span></strong>platform/build/buildplus/buildspec/xx/aaaa.<abbr title="specification">spec</abbr> (aaaa为项目名)
</p>
<pre class="code">在aaaa.spec中修改QRDExt_BootLogo_gp的值
QRDExt_BootLogo_gp = xxxx  (xxxx为raw的文件名)</pre>

<p>
<strong><span style='color:teal; '>4. </span></strong>烧录到系统
</p>
<pre class="code">fastboot flash logo xxxx.raw
fastboot flash aboot emmc_appsboot_fsb.mbn
fastboot reboot</pre>

</div>
<!-- EDIT2 SECTION "LOGO的修改与控制" [41-1001] -->
<h2 class="sectionedit3" id="开机动画的制作和设置">开机动画的制作和设置</h2>
<div class="level2">

<p>
frameworks/base/cmds/bootanimation/
此目录是对动画和声音的播放控制，包括开机和关机的。
</p>

<p>
BootAnimation::android()播放Android自带的动画(android字符动画，默认)
</p>

<p>
BootAnimation::movie()播放设计的动画
</p>

<p>
<strong><span style='color:teal; '>1. </span></strong>开机动画的制作
</p>

<p>
<strong><span style='color:teal; '>1.1. </span></strong>BootAnimation.cpp中可见播放的动画为bootAnimation.zip文件包下的图片。
</p>

<p>
bootanimation.zip不是压缩包，要选择无损压缩的形式。
</p>

<p>
Ubuntu下
</p>
<pre class="code bash"><span class="kw2">zip</span> <span class="re5">-r</span> <span class="re5">-X</span> <span class="re5">-Z</span> store ..<span class="sy0">/</span>bootanimation part<span class="sy0">*/*</span>.png desc.txt</pre>

<p>
windows下
</p>

<p>
选择zip格式下的存储压缩方式
</p>

<p>
<strong><span style='color:teal; '>1.2. </span></strong>动画文件分析
desc.txt文件
</p>
<pre class="code">480 800 24        // 图片宽度480，高度800，最后24是播放动画的每秒帧率为24。
p 1 0 part0  // p 是一个分隔符，1 表示播放一遍，0表示播放完后停顿 0 帧，最后是图片所在的zip包里的目录名。比如你的zip包里最后是这么个结构
                  //  part0(里面包含很多图片）  + desc.txt， 那么你可以在这里把part替换成part0
根据这个语法，我们也可以自定义各种动画形式，例如下面所示:
p 2 24 part0        将part0里的图片，播放2遍，播放完一遍后停顿24帧，因为我们之前设置了帧率是24帧每秒，那么这里就等于停顿1秒。
p 0 0 part1        将part1里的图片无限循环播放，每次播放不停顿。part0播放完后part1循环播放part1</pre>

<p>
如果你设置的宽度和高度不充满屏幕也没关系，剩余区域，系统会填充黑色。如果你设置的宽度和高度大过屏幕，系统会自动裁剪显示居中部分的图片区域。
</p>

<p>
part文件夹
</p>
<pre class="code"> 此文件夹保存着播放的动画的图片 *.png
 动画的播放过程其实就是图片的展现。
 part0 是动画的图片展示，根据帧数的变化，展示不同的图片
 part1 part0播放完后播放该文件夹中的图片。可以一直都是同一图片，也可以根据帧数的变化，展示不同的图片。</pre>

<p>
在以上的基础上创建bootanimation，并把以上文件和文件拷入，进行<strong>无损压缩</strong>就创建完成了。
</p>

<p>
<strong><span style='color:teal; '>2. </span></strong>开机动画的项目控制
</p>
<pre class="code"> 动画文件保存在vendor/qcom/proprietary/qrdplus/QRDExtensions/DynamicComponents/res/BootAnimation_res/xxxx（xxxx为项目名）</pre>

<p>
<strong><span style='color:teal; '>2.1. </span></strong>将创建好的动画bootanimation.zip文件放入对应的项目文件夹(文件夹最好与项目名相同）下
</p>

<p>
<strong><span style='color:teal; '>2.2. </span></strong> vendor/qcom/proprietary/qrdplus/QRDExtensions/DynamicComponents/res/BootAnimation_res/Android.mk
</p>
<pre class="code"> 其中....QRDExt_BootAnimation_gp)/*.zip。QRDExt_BootAnimation_gp即为宏控的动画文件。
    ...QRDExt_BootSound_gp)/*.wav。 QRDExt_BootSound_gp为宏控的开机声音文件。</pre>

<p>
<strong><span style='color:teal; '>2.3. </span></strong>添加宏控
</p>
<pre class="code"> platform/build/buildplus/buildspec/namsapce/names.ini
 添加宏控字符串QRDExt_BootAnimation_gp = xxxx(默认的开机动画，若为no,则默认没有自定义动画)</pre>
<pre class="code"> platform/build/buildplus/buildspec/xxxx/aaaa.spec（aaaa为项目名，或为默认的gernal.spec）
 其中QRDExt_BootAnimation_gp = xxxx（xxxx为我们将动画bootanimation.zip的文件夹名，xxxx若为no则没有动画，选用默认的(android字符）</pre>

<p>
<strong><span style='color:teal; '>3. </span></strong>烧录
</p>
<pre class="code"> adb push bootanimation.zip /system/media
 adb shell sync</pre>

</div>
<!-- EDIT3 SECTION "开机动画的制作和设置" [1002-4458] -->
<h2 class="sectionedit4" id="h_头文件的形式">h 头文件的形式</h2>
<div class="level2">

<p>
rgb888:
</p>
<pre class="code bash">convert <span class="re5">-depth</span> <span class="nu0">8</span> android_logo.png rgb:android_logo.raw
xxd <span class="re5">-i</span> android_logo.raw <span class="sy0">&gt;</span> initlogo.h </pre>

<p>
rgb565:
</p>
<pre class="code bash"><span class="re1">$convert</span> <span class="re5">-depth</span> <span class="nu0">8</span> <span class="sy0">&lt;</span>splash image <span class="kw1">in</span> PNG format<span class="sy0">&gt;</span> rgb:splash.raw
<span class="re1">$host</span><span class="sy0">/</span>linux-x86<span class="sy0">/</span>bin<span class="sy0">/</span>rgb2565 <span class="sy0">&lt;</span> .<span class="sy0">/</span>splash.raw <span class="sy0">&gt;</span> final.img
<span class="re1">$hexdump</span> <span class="re5">-C</span> <span class="re5">-v</span> final.img <span class="sy0">|</span> <span class="kw2">tr</span> <span class="re5">-s</span> <span class="st0">&quot; &quot;</span> <span class="sy0">|</span> <span class="kw2">cut</span> <span class="re5">-d</span> <span class="st_h">' '</span> <span class="re5">-f2-17</span> <span class="sy0">|</span> <span class="kw2">awk</span> <span class="st_h">'BEGIN {print &quot;{&quot;} {OFS=&quot;&quot;; ORS=&quot;&quot;; print &quot;\t&quot;; for(i=1; i &lt;= NF; i++) print &quot;0x&quot;$i&quot;, &quot;; print &quot;\n&quot;;}'</span> <span class="sy0">&gt;</span> splash.array </pre>

</div>
<!-- EDIT4 SECTION "h 头文件的形式" [4459-4943] -->
<h2 class="sectionedit5" id="默认壁纸文件存放位置">默认壁纸文件存放位置</h2>
<div class="level2">

<p>
vendor/qcom/opensource/qrdplus/QRDExtensions/DynamicComponents/res/CustomizationRes/sinldo/frameworks/base/core/res/res/drawable-nodpi/default_wallpaper.jpg 
</p>

</div>
<!-- EDIT5 SECTION "默认壁纸文件存放位置" [4944-] -->