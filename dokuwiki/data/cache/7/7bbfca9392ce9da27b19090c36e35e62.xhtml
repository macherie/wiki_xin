
<p>
— <em><a href="mailto:&#x73;&#x68;&#x75;&#x2e;&#x79;&#x69;&#x6e;&#x40;&#x73;&#x69;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;" class="mail" title="&#x73;&#x68;&#x75;&#x2e;&#x79;&#x69;&#x6e;&#x40;&#x73;&#x69;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;">尹姝</a> 2014/2/21</em>
</p>

<h1 class="sectionedit1" id="jtag动态调试">JTAG动态调试</h1>
<div class="level1">
<div class="table sectionedit2"><table class="inline">
	<tr class="row0">
		<th class="col0 leftalign">Document Title:     </th><td class="col1 leftalign">JTAG动态调试  </td>
	</tr>
	<tr class="row1">
		<th class="col0 leftalign">Version:            </th><td class="col1 leftalign">1.01        </td>
	</tr>
	<tr class="row2">
		<th class="col0 leftalign">Date:               </th><td class="col1 leftalign">2013-04-10  </td>
	</tr>
	<tr class="row3">
		<th class="col0 leftalign">Status:             </th><td class="col1 leftalign">Release     </td>
	</tr>
	<tr class="row4">
		<th class="col0">Document Control ID:</th><td class="col1 leftalign">SIM0002     </td>
	</tr>
	<tr class="row5">
		<th class="col0 leftalign">Writer:             </th><td class="col1 leftalign">Xifangqing  </td>
	</tr>
</table></div>
<!-- EDIT2 TABLE [77-305] --><hr />

</div>
<!-- EDIT1 SECTION "JTAG动态调试" [46-314] -->
<h2 class="sectionedit3" id="调试前准备">调试前准备:</h2>
<div class="level2">

<p>
编译一个Debug版本的image然后用QPST烧录到机器
</p>

<p>
Note：编译Debug版本需要注意以下事项：
</p>

<p>
<strong><span style='color:teal; '>1. </span></strong>USES_NO_DEBUG需要从py文件中去掉
</p>

<p>
<strong><span style='color:teal; '>2. </span></strong>DEBUG_ON设置为yes
</p>

<p>
<strong><span style='color:teal; '>3. </span></strong>生产的elf文件会比平时大很多
</p>

</div>
<!-- EDIT3 SECTION "调试前准备:" [315-643] -->
<h2 class="sectionedit4" id="调试boot_dbl_osbl">调试Boot（DBL, OSBL）：</h2>
<div class="level2">

<p>
以OSBL调试为例，下面是实际操作中的说明和截图
</p>

<p>
<strong><span style='color:teal; '>1. </span></strong>打开trace32窗口，运行脚本AMSS\products\7&times;30\build\ms\boot_debug.cmm
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag1.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag1.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag1.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>2. </span></strong>当前路径就是\build\ms\，pwd回车，选择2 for Android，Apps boot base默认写0.
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag2.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag2.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag2.png" class="media" alt="" /></a>
</p>

<p>
回车弹出如下框图，选取elf文件
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag3.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag3.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag3.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag4.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag4.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag4.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>3. </span></strong>选择Debug OSBL
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag5.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag5.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag5.png" class="media" alt="" /></a>
</p>

<p>
弹出如下框图，选取即可；
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag6.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag6.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag6.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag7.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag7.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag7.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>4. </span></strong>完成上述，程序会停在0xFFFF0440，等待用户操作。点击<a href="/dokuwiki/lib/exe/detail.php/doc;jtag21.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag21.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag21.png" class="media" alt="" /></a>查看当前系统设置的断点，在 osbl_main_ctl（）函数入口有一个断点，按F7执行到该断点处。
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag8.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag8.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag8.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag9.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag9.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag9.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>5. </span></strong>下面以检测设备按键状态为例。
</p>

<p>
osbl_check_key_to_download_mode（）该函数在osbl_hw_init（）中被调用，
</p>

<p>
可以在命令框中输入list osbl_hw_init ，列出函数原型；
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag10.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag10.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag10.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>6. </span></strong>在函数入口设置断点，可以直接右击选择“breakpoint”，断点类型可以选择“auto”，也可以在命名框中输入“B.S 地址”，如下图； 按F7执行到断点处。
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag11.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag11.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag11.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag12.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag12.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag12.png" class="media" alt="" /></a>
</p>

<p>
F2 “step” 以语句为单位执行；
</p>

<p>
F3 “step over call”是一个函数为单位执行；
</p>

<p>
v.r  查看当前变量的值，如下仅按下camera键，则cam_key=0x1；
</p>

<p>
也可以把右击选取需要查看的变量，Add to watch window中查看。
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag13.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag13.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag13.png" class="media" alt="" /></a>
</p>

<p>
V.F 可以查看当前call stack，如图；
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag14.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag14.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag14.png" class="media" alt="" /></a>
</p>

</div>
<!-- EDIT4 SECTION "调试Boot（DBL, OSBL）：" [644-2365] -->
<h2 class="sectionedit5" id="调试amss">调试AMSS：</h2>
<div class="level2">

<p>
<strong><span style='color:teal; '>1. </span></strong>执行脚本 AMSS\products\7&times;30\build\ms\jload.cmm
</p>

<p>
选取该elf文件；
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag15.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag15.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag15.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag16.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag16.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag16.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag17.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag17.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag17.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>2. </span></strong>以查询PM8058 ADC通道参数为例，vbatt_update_adc_battery_params（）每25秒会被调用。
</p>

<p>
<strong>list vbatt_update_adc_battery_params</strong>
</p>

<p>
设置断点，先不使能（Enable前不打勾）该断点，让系统正常启动。然后Enable该断点，F7再运行，可以看到，每隔一会就会在该处停住。
</p>

<p>
程序在此运行停止，命名框中输入V.R 就可以查看ADC通道的参数了。
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag18.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag18.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag18.png" class="media" alt="" /></a>
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag19.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag19.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag19.png" class="media" alt="" /></a>
</p>

<p>
<strong><span style='color:teal; '>3. </span></strong>Modem休眠问题可以通过JTAG很方便的调试，
</p>

<p>
sleep_negate_okts（），只要有某个任务投反对票，则不允许modem休眠，打开TCXO；
</p>

<p>
sleep_assert_okts（)，允许modem休眠，关闭TCXO。
</p>

<p>
<a href="/dokuwiki/lib/exe/detail.php/doc;jtag20.png?id=android%3Ajtag%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95" class="media" title="doc:jtag20.png"><img src="/dokuwiki/lib/exe/fetch.php/doc;jtag20.png" class="media" alt="" /></a>
</p>

</div>
<!-- EDIT5 SECTION "调试AMSS：" [2366-3296] -->
<h2 class="sectionedit6" id="参考文档">参考文档：</h2>
<div class="level2">

<p>
SP80-VU655-5_A_Software_Debug_Manual_MSM7x27A_MSM7x25A_LA.pdf (Page 24).
</p>

</div>
<!-- EDIT6 SECTION "参考文档：" [3297-] -->