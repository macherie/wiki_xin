a:127:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:3:"PCM";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:15;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"PCM的介绍";i:1;i:3;i:2;i:15;}i:2;i:15;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:15;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:213:"自然界中的声音为连续的震动信号，通常我们采用的是脉冲代码调制编码。即PCM编码。PCM通过抽样、量化、编码三个步骤将连续变化的模拟信号转换为数字编码。";}i:2;i:37;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:250;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:252;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"抽样";i:1;i:4;i:2;i:252;}i:2;i:252;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:252;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:252;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:672:"在音频采集中叫做采样率。 由于声音其实是一种能量波，因此也有频率和振幅的特征。波是无限光滑的，弦线可以看成由无数点组成，由于计算机数字系统是离散系统，因此数字编码过程中，必须对弦线的点进行采样。采样的过程就是抽取某点的频率值，很显然，在一秒中内抽取的点越多，获取得频率信息更丰富，为了复原波形，一次振动中，必须有2个点的采样（高低两点），人耳能够感觉到的最高频率为20kHz，因此要满足人耳的听觉要求，则需要至少需要40kHz的采样率。我们常见的CD，采样率为44.1kHz。";}i:2;i:265;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:937;}i:15;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:939;}i:16;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"量化";i:1;i:4;i:2;i:939;}i:2;i:939;}i:17;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:939;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:939;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:162:"将该频率的能量值并量化，用于表示信号强度。量化电平数为 2的整数次幂，我们常见的CD位16bit的采样大小，即2的16次方。";}i:2;i:952;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1114;}i:21;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1116;}i:22;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"编码";i:1;i:4;i:2;i:1116;}i:2;i:1116;}i:23;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1116;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1116;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:596:"根据离散数学和连续数学可知：音频编码最多只能做到无限接近，相对自然界的信号，任何数字音频编码方案都是有损的，因为无法完全还原。在计算机应用中，能够达到最高保真水平的就是PCM编码，被广泛用于素材保存及音乐欣赏，CD、DVD以及我们常见的WAV文件中均有应用。因此，PCM约定俗成了无损编码，因为PCM代表了数字音频中最佳的保真水准，PCM也只能做到最大程度的无限接近。我们而习惯性的把MP3列入有损音频编码范畴，是相对PCM编码的。";}i:2;i:1129;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1725;}i:27;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1727;}i:28;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"pcm到音频格式";i:1;i:4;i:2;i:1727;}i:2;i:1727;}i:29;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1727;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1727;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:954:"要算一个PCM音频流的码率是一件很轻松的事情，采样率值×采样大小值×声道数bps。一个采样率为44.1KHz，采样大小为16bit，双声道的PCM编码的WAV文件，它的数据速率则为 44.1K×16×2 =1411.2 Kbps。我们常说128K的MP3，对应的WAV的参数，就是这个1411.2 Kbps，这个参数也被称为数据带宽，它和ADSL中的带宽是一个概念。将码率除以8（字节单位）,就可以得到这个WAV的数据速率，即176.4KB/s。这表示存储一秒钟采样率为44.1KHz，采样大小为16bit，双声道的PCM编码的音频信号，需要176.4KB的空间，1分钟则约为10.34M，这对大部分用户是不可接受的，要降低磁盘占用，只有2种方法，降低采样指标或者压缩。降低指标是不可取的，因此研发了各种压缩方案。由于用途和针对的目标市场不一样，各种音频压缩编码所达到的音质和压缩比都不一样。";}i:2;i:1752;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2706;}i:33;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2708;}i:34;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"频率与采样率的关系";i:1;i:4;i:2;i:2708;}i:2;i:2708;}i:35;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:2708;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2708;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:561:"采样率表示了每秒对原始信号采样的次数，我们常见到的音频文件采样率多为44.1KHz，这意味着什么呢？假设我们有2段正弦波信号，分别为20Hz和20KHz，长度均为一秒钟，以对应我们能听到的最低频和最高频，分别对这两段信号进行 40KHz的采样，我们可以得到一个什么样的结果呢？结果是：20Hz的信号每次振动被采样了40K/20=2000次，而20K的信号每次振动只有2次采样。显然，在相同的采样率下，记录低频的信息远比高频的详细。";}i:2;i:2742;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3303;}i:39;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3305;}i:40;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"安卓系统中的pcm";i:1;i:3;i:2;i:3305;}i:2;i:3305;}i:41;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3305;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3305;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:"（以下是我总结的，如果有错还请指出）";}i:2;i:3335;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3389;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3389;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"安卓hal层以上的系统并不对音频进行解码。所以他们直接传递音频都是直接通过pcm格式。";}i:2;i:3391;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3509;}i:48;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3509;}i:49;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"安卓pcm的格式";i:1;i:4;i:2;i:3509;}i:2;i:3509;}i:50;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:3509;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3509;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"安卓pcm支持的采样率主要有44100、22050、11025
安卓pcm支持的编码制式主要是16bit";}i:2;i:3534;}i:53;a:3:{i:0;s:12:"deleted_open";i:1;a:0:{}i:2;i:3636;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"（也有一说是16bit和8bit的都支持）";}i:2;i:3641;}i:55;a:3:{i:0;s:13:"deleted_close";i:1;a:0:{}i:2;i:3686;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3692;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3692;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"订正：";}i:2;i:3694;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3703;}i:60;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:85:"根据从MSM8996的codec中看，应该是16bit和24bit的两种格式。附上代码";}i:2;i:3703;}i:61;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:743:"
 701 static int slim0_tx_bit_format_put(struct snd_kcontrol *kcontrol,
 702                                    struct snd_ctl_elem_value *ucontrol)
 703 {
 704         int rc = 0;
 705 
 706         switch (ucontrol->value.integer.value[0]) {
 707         case 1:
 708                 slim0_tx_bit_format = SNDRV_PCM_FORMAT_S24_LE;
 709                 break;
 710         case 0:
 711                 slim0_tx_bit_format = SNDRV_PCM_FORMAT_S16_LE;
 712                 break;
 713         default:
 714                 pr_err("%s: invalid value %ld\n", __func__,
 715                        ucontrol->value.integer.value[0]);
 716                 rc = -EINVAL;
 717                 break;
 718         }
 719 
 720         return rc;
 721 }
";i:1;s:1:"c";i:2;N;}i:2;i:3798;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3798;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:138:"这个大家也可以通过去观察AudioTrack和Flinger 的set函数，set函数的几个参数实际的决定了生成的pcm的格式。";}i:2;i:4552;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4691;}i:65;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4691;}i:66;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"pcm与分析音频";i:1;i:4;i:2;i:4691;}i:2;i:4691;}i:67;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4691;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4691;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:299:"基于每一层系统直接的交接都是通过pcm，则我们可以通过dump pcm，并分析它从而锁定系统中出错的那一个层。类似于音频分析中独有的log信息。特别对于分析一些非音频效果导致的问题，例如性能问题，可以通过这种方法定位。";}i:2;i:4716;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5016;}i:71;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5016;}i:72;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"dump安卓系统中的pcm";i:1;i:4;i:2;i:5016;}i:2;i:5016;}i:73;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:5016;}i:74;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5016;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"这个给大家贴出dump AudioTrack 中pcm的方法，hal层和flinger方式类似：";}i:2;i:5048;}i:76;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5140;}i:77;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:641:"
diff --git a/media/libmedia/AudioTrack.cpp b/media/libmedia/AudioTrack.cpp 

@@ -1861,6 +1862,20 @@ nsecs_t AudioTrack::processAudioBuffer() 
 audioBuffer.size <<= 1; 
 } 

+ { 
+ int tmpFd; 
+ const uint8_t* p = (uint8_t *)(audioBuffer.i8); 
+ size_t copy = audioBuffer.size; 
+ tmpFd = ::open("/data/misc/audio/dump-audiotrack.pcm", O_WRONLY|O_APPEND|O_CREAT，0777); 
+ if ( tmpFd < 0 ) { 
+ ALOGE("Fail to open dump file"); 
+ } else { 
+ ::write(tmpFd, p, copy); 
+ ::close(tmpFd); 
+ } 
+ } 
+ 
 size_t releasedFrames = audioBuffer.size / mFrameSizeAF; 
 audioBuffer.frameCount = releasedFrames; 
 mRemainingFrames -= releasedFrames;
";i:1;s:1:"c";i:2;N;}i:2;i:5140;}i:78;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5792;}i:79;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"分析pcm的工具";i:1;i:3;i:2;i:5792;}i:2;i:5792;}i:80;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5792;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5792;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"dump下来以后，我们获得了pcm格式的文件。需要有专用的工具进行分析";}i:2;i:5820;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5912;}i:84;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5912;}i:85;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"cool edit";i:1;i:4;i:2;i:5912;}i:2;i:5912;}i:86;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:5912;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5912;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:"这个是windows 下的音频分析工具，功能强大，但是有版权问题。";}i:2;i:5928;}i:89;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6012;}i:90;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6012;}i:91;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"audacity";i:1;i:4;i:2;i:6012;}i:2;i:6012;}i:92;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:6012;}i:93;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6012;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"这个是linux下的免费工具，对于分析pcm是足够的。";}i:2;i:6027;}i:95;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6093;}i:96;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6093;}i:97;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"安装";i:1;i:5;i:2;i:6093;}i:2;i:6093;}i:98;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:6093;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6093;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"sudo apt-get install audacity";}i:2;i:6104;}i:101;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6134;}i:102;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6134;}i:103;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"使用";i:1;i:5;i:2;i:6134;}i:2;i:6134;}i:104;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:6134;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6134;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"audacity";}i:2;i:6145;}i:107;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:6153;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"文件";}i:2;i:6155;}i:109;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:6161;}i:110;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"导入";}i:2;i:6163;}i:111;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:6169;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"原始数据";}i:2;i:6171;}i:113;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:6183;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"pcm";}i:2;i:6185;}i:115;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6188;}i:116;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6188;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:205:"然后根据我们看到的set（）打印的信息初始化pcm。如果不能正确初始化，会导致杂音，或是声音偏快，声音尖锐等问题。一般，采样率44100，编码制式选16。";}i:2;i:6190;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6395;}i:119;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6395;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"效果如下";}i:2;i:6397;}i:121;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6409;}i:122;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6409;}i:123;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:51:":platform:8996:audio:audacity效果屏幕截图.png";i:1;s:0:"";i:2;N;i:3;s:3:"200";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:6411;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6471;}i:125;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6472;}i:126;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6472;}}