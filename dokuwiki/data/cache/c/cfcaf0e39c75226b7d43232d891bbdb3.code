<span class="kw4">void</span> MPEG4SegWriter<span class="sy0">::</span><span class="me2">threadFunc</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    ALOGV<span class="br0">&#40;</span><span class="st0">&quot;threadFunc&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    prctl<span class="br0">&#40;</span>PR_SET_NAME<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="br0">&#41;</span><span class="st0">&quot;MPEG4SegWriter&quot;</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co2">#ifdef MTK_AOSP_ENHANCEMENT</span>
    androidSetThreadPriority<span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> ANDROID_PRIORITY_DISPLAY<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// -4, to have favorable IO priority</span>
<span class="co2">#endif</span>
    Mutex<span class="sy0">::</span><span class="me2">Autolock</span> autoLock<span class="br0">&#40;</span>mLock<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span>mDone<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        Chunk chunk<span class="sy0">;</span>
        bool chunkFound <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
&nbsp;
        <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span>mDone <span class="sy0">&amp;&amp;</span> <span class="sy0">!</span><span class="br0">&#40;</span>chunkFound <span class="sy0">=</span> findChunkToWrite<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
            mChunkReadyCondition.<span class="me1">wait</span><span class="br0">&#40;</span>mLock<span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
&nbsp;
        <span class="co1">// In real time recording mode, write without holding the lock in order</span>
        <span class="co1">// to reduce the blocking time for media track threads.</span>
        <span class="co1">// Otherwise, hold the lock until the existing chunks get written to the</span>
        <span class="co1">// file.</span>
        <span class="kw1">if</span> <span class="br0">&#40;</span>chunkFound<span class="br0">&#41;</span> <span class="br0">&#123;</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mIsRealTimeRecording<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                mLock.<span class="me1">unlock</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
            ALOGD<span class="br0">&#40;</span><span class="st0">&quot;chunk.mTimeStampUs %&quot;</span>PRId64<span class="st0">&quot;&quot;</span><span class="sy0">,</span>chunk.<span class="me1">mTimeStampUs</span><span class="br0">&#41;</span><span class="sy0">;</span>
            ALOGD<span class="br0">&#40;</span><span class="st0">&quot;bufferchunkStampUs %&quot;</span>PRId64<span class="st0">&quot;&quot;</span><span class="sy0">,</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mRestart<span class="sy0">&amp;&amp;</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>chunk.<span class="me1">mTimeStampUs</span><span class="sy0">&lt;=</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    <span class="kw1">if</span> <span class="br0">&#40;</span>chunk.<span class="me1">mTrack</span><span class="sy0">-&gt;</span>getRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">-</span>chunk.<span class="me1">mTimeStampUs</span><span class="sy0">&lt;</span>2000000LL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        writeChunkToFile<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
            <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                 writeChunkToFile<span class="br0">&#40;</span><span class="sy0">&amp;</span>chunk<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="kw1">if</span> <span class="br0">&#40;</span>mIsRealTimeRecording<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                mLock.<span class="me1">lock</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="co1">///////////////////////////////////////////////</span>
            <span class="co1">//qidongran add</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span>mRestart<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                 ALOGD<span class="br0">&#40;</span><span class="st0">&quot;threadFunc&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>mAudioDone <span class="sy0">&amp;&amp;</span> mVedioDone<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;all Done&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//write moov box</span>
                    writeMoovBoxforRestart<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//close file</span>
                     close<span class="br0">&#40;</span>mFd<span class="br0">&#41;</span><span class="sy0">;</span>
                     mFd <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>
                     ALOGD<span class="br0">&#40;</span><span class="st0">&quot;close mfd %d&quot;</span><span class="sy0">,</span>mFd<span class="br0">&#41;</span><span class="sy0">;</span>
                     notify<span class="br0">&#40;</span>MEDIA_RECORDER_EVENT_INFO<span class="sy0">,</span> <span class="nu0">999</span><span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//write header</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;write header begin&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    mOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mMdatOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mWriteMoovBoxToMemory <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mMoovBoxBuffer <span class="sy0">=</span> NULL<span class="sy0">;</span>
                    mMoovBoxBufferOffset <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
                    mFd <span class="sy0">=</span> mswitchFd<span class="sy0">;</span>
                    <span class="co2">#ifdef USE_FILE_CACHE</span>
	                mWriterCacheSize <span class="sy0">=</span> DEFAULT_FILE_CACHE_SIZE<span class="sy0">;</span>
	                <span class="kw4">char</span> param1<span class="br0">&#91;</span>PROPERTY_VALUE_MAX<span class="br0">&#93;</span><span class="sy0">;</span>
	                <span class="kw4">int32_t</span> value1<span class="sy0">;</span>
	                property_get<span class="br0">&#40;</span><span class="st0">&quot;vr.writer.cache.size&quot;</span><span class="sy0">,</span> param1<span class="sy0">,</span> <span class="st0">&quot;-1&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	                value1 <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html"><span class="kw3">atoi</span></a><span class="br0">&#40;</span>param1<span class="br0">&#41;</span><span class="sy0">;</span>
	                ALOGD<span class="br0">&#40;</span><span class="st0">&quot;value1=%d&quot;</span><span class="sy0">,</span> value1<span class="br0">&#41;</span><span class="sy0">;</span>
	                <span class="kw1">if</span><span class="br0">&#40;</span><span class="br0">&#40;</span>value1 <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#40;</span>value1 <span class="sy0">&lt;</span> LOW_MEM_PROTECT_THRESHOLD<span class="br0">&#41;</span><span class="br0">&#41;</span>
	                <span class="br0">&#123;</span>
		            mWriterCacheSize <span class="sy0">=</span> value1<span class="sy0">;</span>
	                <span class="br0">&#125;</span>
	                ALOGD<span class="br0">&#40;</span><span class="st0">&quot;@@[RECORD_PROPERTY]writer.cache.size = %d&quot;</span><span class="sy0">,</span> mWriterCacheSize<span class="br0">&#41;</span><span class="sy0">;</span>
	                mCacheWriter <span class="sy0">=</span> new MPEG4SegFileCacheWriter<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mWriterCacheSize<span class="br0">&#41;</span><span class="sy0">;</span>
	                CHECK<span class="br0">&#40;</span>mCacheWriter <span class="sy0">!=</span> NULL<span class="br0">&#41;</span><span class="sy0">;</span>
	                mCacheWriter<span class="sy0">-&gt;</span>setOwner<span class="br0">&#40;</span>this<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co2">#endif</span>
                    writeFtypBox<span class="br0">&#40;</span>mRestartParam<span class="br0">&#41;</span><span class="sy0">;</span>
                    mFreeBoxOffset <span class="sy0">=</span> mOffset<span class="sy0">;</span>
&nbsp;
                    <span class="kw1">if</span> <span class="br0">&#40;</span>mEstimatedMoovBoxSize <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        <span class="kw4">int32_t</span> bitRate <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>
                        <span class="kw1">if</span> <span class="br0">&#40;</span>mRestartParam<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                            mRestartParam<span class="sy0">-&gt;</span>findInt32<span class="br0">&#40;</span>kKeyBitRate<span class="sy0">,</span> <span class="sy0">&amp;</span>bitRate<span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#125;</span>
                        mEstimatedMoovBoxSize <span class="sy0">=</span> estimateMoovBoxSize<span class="br0">&#40;</span>bitRate<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
&nbsp;
                    CHECK_GE<span class="br0">&#40;</span>mEstimatedMoovBoxSize<span class="sy0">,</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
                    <span class="kw1">if</span> <span class="br0">&#40;</span>mStreamableFile<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    <span class="co1">// Reserve a 'free' box only for streamable file</span>
<span class="co2">#if defined(MTK_AOSP_ENHANCEMENT) &amp;&amp; defined(USE_FILE_CACHE)</span>
		mCacheWriter<span class="sy0">-&gt;</span>seek<span class="br0">&#40;</span>mFreeBoxOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#else</span>
        lseek64<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mFreeBoxOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
                    writeInt32<span class="br0">&#40;</span>mEstimatedMoovBoxSize<span class="br0">&#41;</span><span class="sy0">;</span>
                     write<span class="br0">&#40;</span><span class="st0">&quot;free&quot;</span><span class="sy0">,</span> <span class="nu0">4</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    mMdatOffset <span class="sy0">=</span> mFreeBoxOffset <span class="sy0">+</span> mEstimatedMoovBoxSize<span class="sy0">;</span>
                     <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                        mMdatOffset <span class="sy0">=</span> mOffset<span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                    ALOGD<span class="br0">&#40;</span><span class="st0">&quot;mMdatOffset=%d, mOffset=%d&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mMdatOffset<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mOffset<span class="br0">&#41;</span><span class="sy0">;</span>
                    mOffset <span class="sy0">=</span> mMdatOffset<span class="sy0">;</span>
<span class="co2">#if defined(MTK_AOSP_ENHANCEMENT) &amp;&amp; defined(USE_FILE_CACHE)</span>
	mCacheWriter<span class="sy0">-&gt;</span>seek<span class="br0">&#40;</span>mMdatOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#else</span>
    lseek64<span class="br0">&#40;</span>mFd<span class="sy0">,</span> mMdatOffset<span class="sy0">,</span> SEEK_SET<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
                     <span class="kw1">if</span> <span class="br0">&#40;</span>mUse32BitOffset<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        write<span class="br0">&#40;</span><span class="st0">&quot;????mdat&quot;</span><span class="sy0">,</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy0">;</span>
                       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                            write<span class="br0">&#40;</span><span class="st0">&quot;<span class="es2">\x00</span><span class="es2">\x00</span><span class="es2">\x00</span><span class="es2">\x01</span>mdat????????&quot;</span><span class="sy0">,</span> <span class="nu0">16</span><span class="br0">&#41;</span><span class="sy0">;</span>
                       <span class="br0">&#125;</span>
                       ALOGD<span class="br0">&#40;</span><span class="st0">&quot;mMdatOffset=%d, mOffset=%d&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mMdatOffset<span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">int32_t</span><span class="br0">&#41;</span>mOffset<span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="co1">//reset status</span>
                    mRestart <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mtrackRestart <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mVedioDone <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    mAudioDone <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span>
                    <span class="kw1">for</span> <span class="br0">&#40;</span>List<span class="sy0">&lt;</span>Track <span class="sy0">*&gt;::</span><span class="me2">iterator</span> it <span class="sy0">=</span> mTracks.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                            it <span class="sy0">!=</span> mTracks.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy0">++</span>it<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setDurationUsRestart<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setRestartBufferChunkStampUs<span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
                        <span class="br0">&#40;</span><span class="sy0">*</span>it<span class="br0">&#41;</span><span class="sy0">-&gt;</span>setTrackRestartDone<span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span>
            <span class="br0">&#125;</span>
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span>
&nbsp;
    writeAllChunks<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#ifdef MTK_AOSP_ENHANCEMENT</span>
	mWriterThreadExit <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span>
	mWriterThreadExitCondition.<span class="me1">signal</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	ALOGD<span class="br0">&#40;</span><span class="st0">&quot;writer thread exit&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co2">#endif</span>
<span class="br0">&#125;</span>