a:94:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1;}i:3;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"---";}i:2;i:2;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5;}i:5;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:6;}i:6;a:3:{i:0;s:9:"emaillink";i:1;a:2:{i:0;s:19:"kemeng.yang@sim.com";i:1;s:9:"杨克猛";}i:2;i:8;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 2014/2/18";}i:2;i:41;}i:8;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:51;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:53;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:54;}i:11;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"程序员的素质";i:1;i:2;i:2;i:54;}i:2;i:54;}i:12;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:54;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:54;}i:14;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:84;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"一个程序员应该具备哪些素质？谁是优秀的程序员？";}i:2;i:86;}i:16;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:155;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:157;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:158;}i:19;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:158;}i:20;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:158;}i:21;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:158;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:364:" 细心和责任心。他们写代码非常细心，基本上不会犯忘记释放内存关闭文件的错误，经常性的检查代码，发现代码中微小错误；提交代码之前，一般会测试几十遍，保证代码尽量不出问题。对代码精益求精，即便是代码没有问题，也要经常重构，提高代码的健壮性和简洁性。";}i:2;i:162;}i:23;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:526;}i:24;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:526;}i:25;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:526;}i:26;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:526;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:264:" 善于学习和总结，寻找自己的不足。IT领域的技术更新换代太快了，他们会经常读一些计算机经典名著，又时刻关注新技术的发展，对于犯过的错误会牢牢记在心中，写代码经常提醒别犯类似的错误。";}i:2;i:530;}i:28;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:794;}i:29;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:794;}i:30;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:794;}i:31;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:794;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:497:" 思维严谨。他们写一个函数，总会先检查参数，IF语句总能覆盖所有的条件组合，while不会有加1减1的错误，内存不用的时候，总会及时释放，调用一个函数，经常判断返回值。他们考虑的问题比一般人多，比如在SD卡上写文件，会先判断SD是否已经挂载，是不是可写，是不是已满，调用了write函数会检查写入了字符数，最后自己关闭文件，不使用java语言自动关闭文件的功能。";}i:2;i:798;}i:33;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1295;}i:34;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1295;}i:35;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1295;}i:36;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1295;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:" 良好的耐力。为了跟踪一个BUG，连续几天分析LOG，反复对比不同条件下的LOG。有一种不达目标不罢休的劲头。";}i:2;i:1299;}i:38;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1444;}i:39;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1444;}i:40;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1444;}i:41;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1444;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:274:" 谦虚而谨慎，当别人提出疑问的时候，他会首先去看LOG和代码，他相信只要是代码总会隐藏错误，而决不会把自己的错误推卸到别人身上。态度谦和，乐意与别人沟通，从来不认为向别人请教是无能的表现。";}i:2;i:1448;}i:43;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1722;}i:44;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1722;}i:45;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1722;}i:46;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1722;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:" 善于使用设计模式和架构，写出的代码模块化性强，高内聚低耦合，扩充维护都容易。";}i:2;i:1726;}i:48;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1841;}i:49;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1841;}i:50;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1841;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1841;}i:52;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1843;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"拙劣的程序员";}i:2;i:1845;}i:54;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1863;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:1865;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1866;}i:57;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:1866;}i:58;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1866;}i:59;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1866;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:295:" 粗心，没有责任心。经常忘记释放内存关闭数据库或文件，代码写完了，测试一次没发现问题就提交。他认为反正有测试部门，测试软件是他们的事。很少检查代码，没问题决不看代码，更不会去重构，不愿对代码多测试。";}i:2;i:1870;}i:61;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2165;}i:62;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2165;}i:63;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2165;}i:64;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2165;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" 不经常学习，很少总结，学习少，进步慢，总是犯重复性的错误。";}i:2;i:2169;}i:66;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2257;}i:67;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2257;}i:68;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2257;}i:69;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2257;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:219:" 思维混乱，丢三落四。不喜欢检查参数和返回值，IF语句只能覆盖大部分情况，所以其代码大部分情况是好的，却又时常出问题。一个模块维护大半年，仍然不稳定。";}i:2;i:2261;}i:71;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2480;}i:72;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2480;}i:73;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2480;}i:74;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2480;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:" 没有耐力。一个BUG跟踪半天没发现问题就厌倦了，打个补丁完事，连补丁都是有时行有时不行。";}i:2;i:2484;}i:76;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2611;}i:77;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2611;}i:78;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2611;}i:79;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2611;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:305:" 过于自信，狂妄自大，从不承认自己的代码有错，除非你能牢牢抓住他的证据。别人发现了他的问题不看LOG，不看代码，信誓旦旦地说“我的代码测过了，没有问题”。喜欢推卸责任，即便他真地发现了问题他也会说是别人的问题.";}i:2;i:2615;}i:81;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2920;}i:82;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2920;}i:83;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2920;}i:84;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2920;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:" 不使用设计模式，只喜欢用数组，代码随意而混乱，没有模块化思想，扩充维护极其困难。";}i:2;i:2924;}i:86;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3045;}i:87;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3045;}i:88;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:3045;}i:89;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3045;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:300:"如果一个软件部门有几个优秀的程序员，项目的成功就有了保障。对于拙劣的程序员，最好的办法就是把他们清理出去，他们的存在只会增加软件的错误，延缓项目的进度，还经常连累别人，至少不要把这些人放在重要的岗位。";}i:2;i:3047;}i:91;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3347;}i:92;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3348;}i:93;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3348;}}