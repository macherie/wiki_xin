a:362:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1;}i:3;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"---";}i:2;i:2;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5;}i:5;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:6;}i:6;a:3:{i:0;s:9:"emaillink";i:1;a:2:{i:0;s:15:"shu.yin@sim.com";i:1;s:6:"尹姝";}i:2;i:8;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 2013/12/11";}i:2;i:34;}i:8;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:45;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:47;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:48;}i:11;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Git 基本操作";i:1;i:1;i:2;i:48;}i:2;i:48;}i:12;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:48;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:48;}i:14;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:44:"http://mt.sohu.com/20160927/n469237607.shtml";i:1;N;}i:2;i:80;}i:15;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:128;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:128;}i:17;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:27:":git:git使用及技巧.ppt";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:130;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:162;}i:19;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:164;}i:20;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"git rm";i:1;i:2;i:2;i:164;}i:2;i:164;}i:21;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:164;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:164;}i:23;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:183;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 删除文件 ";}i:2;i:185;}i:25;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:199;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:201;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:201;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:"要从Git版本库中删除某个文件，就必须要先从暂存区删除，然后提交。可以用 git rm 命令完成此工作，并连带从工作区中删除指定的文件。";}i:2;i:203;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:391;}i:30;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:21:"
$ git rm welcom.txt
";i:1;s:4:"bash";i:2;N;}i:2;i:391;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:391;}i:32;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:427;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 强制删除 ";}i:2;i:429;}i:34;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:443;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:445;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:445;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:"如果删除之前修改过并且已经加到暂存区的话，则必须要用强制删除选项-f。";}i:2;i:447;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:554;}i:39;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:24:"
$ git rm -f welcom.txt
";i:1;s:4:"bash";i:2;N;}i:2;i:554;}i:40;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:554;}i:41;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:593;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" 删除Git版本库中文件，保留当前工作区文件 ";}i:2;i:595;}i:43;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:654;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:656;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:656;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"如果只想把文件从Git版本库中删除，但想保留在当前工作区，可以用";}i:2;i:658;}i:47;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:748;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"cached选项。";}i:2;i:750;}i:49;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:771;}i:50;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:30:"
$ git rm --cached welcom.txt
";i:1;s:4:"bash";i:2;N;}i:2;i:771;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:771;}i:52;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:816;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 删除文件夹里所有文件 ";}i:2;i:818;}i:54;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:850;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:852;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:858;}i:57;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:18:"
$ git rm -r dir/
";i:1;s:4:"bash";i:2;N;}i:2;i:858;}i:58;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:858;}i:59;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:891;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" 快速标记删除 ";}i:2;i:893;}i:61;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:913;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:915;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:915;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"将本地有改动(包括修改和删除)的文件标记到暂存区";}i:2;i:917;}i:65;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:991;}i:66;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:16:"
$ git add -u .
";i:1;s:4:"bash";i:2;N;}i:2;i:991;}i:67;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1022;}i:68;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"git mv";i:1;i:2;i:2;i:1022;}i:2;i:1022;}i:69;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1022;}i:70;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1022;}i:71;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1041;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 移动文件 ";}i:2;i:1043;}i:73;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1057;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:1059;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1066;}i:76;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:28:"
$ git mv file_from file_to
";i:1;s:4:"bash";i:2;N;}i:2;i:1066;}i:77;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1066;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"git mv 命令相当于运行了下面三条命令：";}i:2;i:1108;}i:79;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1166;}i:80;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:61:"
$ mv file_from file_to
$ git rm file_from
$ git add file_to
";i:1;s:4:"bash";i:2;N;}i:2;i:1166;}i:81;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1242;}i:82;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"git diff";i:1;i:2;i:2;i:1242;}i:2;i:1242;}i:83;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1242;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1242;}i:85;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"git:diff";i:1;s:8:"git diff";}i:2;i:1263;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1284;}i:87;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1286;}i:88;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"git status";i:1;i:2;i:2;i:1286;}i:2;i:1286;}i:89;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1286;}i:90;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1286;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"Git status 命令用来确定哪些文件当前处于什么状态。";}i:2;i:1309;}i:92;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1377;}i:93;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1377;}i:94;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1379;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:" Nothing to commit：";}i:2;i:1381;}i:96;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1402;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:" 工作目录是干净的，即当前没有任何被加到暂存区，也没有任何文件在上次提交后更改过。";}i:2;i:1404;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1525;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1525;}i:100;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1527;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" Changes not staged for commit：";}i:2;i:1529;}i:102;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1562;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:" 版本库中的文件在工作区中被修改了，还没有加到暂存区中（即还没有git add），也没有提交到版本库中。";}i:2;i:1564;}i:104;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1704;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1704;}i:106;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1706;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" Changes to be committed：";}i:2;i:1708;}i:108;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1735;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:134:" 版本库中的文件在工作区中被修改了，并已加到暂存区中（即也git add），但还没有提交到版本库中。";}i:2;i:1737;}i:110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1871;}i:111;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1871;}i:112;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1873;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" Untracked files：";}i:2;i:1875;}i:114;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1894;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" 新加文件，版本库中并没有此文件。";}i:2;i:1896;}i:116;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1945;}i:117;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1945;}i:118;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1947;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" Git status -s ";}i:2;i:1949;}i:120;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1964;}i:121;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1966;}i:122;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1966;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"第一列为暂存区状态";}i:2;i:1968;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1995;}i:125;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1995;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"第二列为工作区状态";}i:2;i:1997;}i:127;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2030;}i:128;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:17:"
$ git status -s
";i:1;s:4:"bash";i:2;N;}i:2;i:2030;}i:129;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2030;}i:130;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:5:"green";i:1;s:0:"";}}i:2;i:1;i:3;s:13:"<color green>";}i:2;i:2061;}i:131;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:1:"M";}i:2;i:3;i:3;s:1:"M";}i:2;i:2074;}i:132;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:2075;}i:133;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:3:"red";i:1;s:0:"";}}i:2;i:1;i:3;s:11:"<color red>";}i:2;i:2083;}i:134;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:1:"M";}i:2;i:3;i:3;s:1:"M";}i:2;i:2094;}i:135;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:2095;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" aaa";}i:2;i:2103;}i:137;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2107;}i:138;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2107;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"位于第一列的字符 ";}i:2;i:2109;}i:140;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:5:"green";i:1;s:0:"";}}i:2;i:1;i:3;s:13:"<color green>";}i:2;i:2134;}i:141;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:1:"M";}i:2;i:3;i:3;s:1:"M";}i:2;i:2147;}i:142;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:2148;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:" 的含义是：版本库中的文件与处于中间状态——提交任务(提交暂存区，stage)中的文件相比有改动。";}i:2;i:2156;}i:144;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2287;}i:145;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2287;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"位于第二列的字符 ";}i:2;i:2289;}i:147;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:3:"red";i:1;s:0:"";}}i:2;i:1;i:3;s:11:"<color red>";}i:2;i:2314;}i:148;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:1:"M";}i:2;i:3;i:3;s:1:"M";}i:2;i:2325;}i:149;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:2326;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:134:" 的含义是：工作区当前的文件与处于中间状态——提交任务(提交暂存区，stage)中的文件相比有改动。";}i:2;i:2334;}i:151;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2468;}i:152;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2470;}i:153;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"git log";i:1;i:2;i:2;i:2470;}i:2;i:2470;}i:154;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2470;}i:155;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2470;}i:156;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2490;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 查看历史提交。";}i:2;i:2492;}i:158;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2514;}i:159;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2516;}i:160;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2516;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。每次更新都有一个 SHA1 哈希值、作者的名字和电子邮件地址、提交时间及提交说明。";}i:2;i:2518;}i:162;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2745;}i:163;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2745;}i:164;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"参数：";}i:2;i:2747;}i:165;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2762;}i:166;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:435:"
-p       选项展开显示每次提交的内容差异。
-<n>     则仅显示最近的 <n> 次提交。
--stat   仅显示简要的增改行数统计。
--pretty 可以指定使用完全不同于默认格式的方式展示历史提交。比如用 oneline 将每到个提交放在一行显示。另外还有 shor, full 和 fuller 可以用，展示的信息或多或少有些不同，请自己动手实践一下看看效果如何。
";i:1;N;i:2;N;}i:2;i:2762;}i:167;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2762;}i:168;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3207;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 例：查看某段时刻的log ";}i:2;i:3209;}i:170;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3241;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3243;}i:172;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3249;}i:173;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:498:"
git log --until=2013-11-23  #表示查看2013年11月23日以前的log
git log --since="2 days ago" --until="10 hour ago" #就表示你希望查找两天前到十小时前的log
git log --until=1.minute.ago # 一分钟之前的所有 log
git log --since=1.day.ago #一天之内的log
git log --since=1.hour.ago #一个小时之内的 log
git log --since=1.month.ago --until=2.weeks.ago #一个月之前到半个月之前的log
git log --since=2013.08.01 --until=2013-09-07 #某个时间段的 log
";i:1;s:4:"bash";i:2;N;}i:2;i:3249;}i:174;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3762;}i:175;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"多分支操作";i:1;i:2;i:2;i:3762;}i:2;i:3762;}i:176;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3762;}i:177;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3762;}i:178;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:234:"当一套代码含有多个分支，且需要在不同的分支上进行来回的切换和开发，如果分别下载不同分支的代码到本地会占用大量内存，导致本机容量不够，故提供以下方法仅供参考。";}i:2;i:3789;}i:179;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4023;}i:180;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4023;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"eg：因CB09代码 客户需求不同，特此创建了不同的开发分支（主分支msm8996，客户分支MSM8996_C01，MSM8996_C02等）";}i:2;i:4025;}i:182;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4166;}i:183;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4166;}i:184;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"下载完主分支msm8996代码后，进入到需要修改 的文件目录下（包含.git库即可）,eg abi/cpp";}i:2;i:4168;}i:185;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4287;}i:186;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:871:"

$ cd abi/cpp
$ git status . \\ 查看本地代码是否有修改但尚未提交
$ git stash   \\ 如果本地代码已经有修改但尚未提交，为防止切换分支时覆盖本地代码，可先暂存本地代码
$ git branch -rv   \\ 查看远程所有分支及相关信息
$ git checkout -b MSM8996_C01 sim/MSM8996_C01  \\ 如需要在客户分支MSM8996_C01进行相关开发测试，则基于远程分支sim/MSM8996_C01 创建本地跟踪分支MSM8996_C01
$ xxxxxx  \\ 根据开发需求 进行相关修改，合并和提交
$ repo upload .  \\ 推送代码至评审服务器,此时推送到服务器上对应的分支是 MSM8996_C01,不在是默认的分支msm8996
$ git checkout master-branch  \\ 修改完成代码后再切换回主分支即可
$ git stash pop  \\ 将本地主分支上修改但未保存的代码 重新释放出来，进行后续的开发
";i:1;s:4:"bash";i:2;N;}i:2;i:4287;}i:187;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4287;}i:188;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-20_17_09_08屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:5173;}i:189;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5218;}i:190;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5218;}i:191;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-20_17_05_59屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:5220;}i:192;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5265;}i:193;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5265;}i:194;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-20_17_07_08屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:5267;}i:195;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5312;}i:196;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5312;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:185:"注释：如果修改的文件牵扯的文件目录很多 （位于不同的.git 库下），可以在以上git命令前 添加 repo forall -c 通过迭代器对代码整体进行切换";}i:2;i:5314;}i:198;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5499;}i:199;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5503;}i:200;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:47:"Git使用中“..”和“...”之间的区别";i:1;i:2;i:2;i:5503;}i:2;i:5503;}i:201;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5503;}i:202;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5503;}i:203;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"---";}i:2;i:5562;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5565;}i:205;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:5566;}i:206;a:3:{i:0;s:9:"emaillink";i:1;a:2:{i:0;s:18:"yuhua.wang@sim.com";i:1;s:10:"yuhua.wang";}i:2;i:5568;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 2016/12/21 14:50";}i:2;i:5601;}i:208;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:5618;}i:209;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5620;}i:210;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5620;}i:211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"在使用git中，我们经常需要对比几次提交或连续提交之间的区别，而";}i:2;i:5622;}i:212;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5712;}i:213;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:5713;}i:214;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5716;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:128:"（三个点）和“..”（两个点）成为不二之选，那么他们之间有什么异同呢？下面简单介绍如下：";}i:2;i:5717;}i:216;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5845;}i:217;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5845;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:"相同点：两者均可以表示一段Git提交记录，即 CommitA..CommitB or CommitA";}i:2;i:5847;}i:219;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:5935;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"CommitB 均表示从提交 CommitA到 ComiitB之间的所有提交。";}i:2;i:5938;}i:221;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6007;}i:222;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6007;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"不同点：因两者在不同的Git命令中其含义存在一定区别，故根据Git具体指令介绍如下： ";}i:2;i:6009;}i:224;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6125;}i:225;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6125;}i:226;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6125;}i:227;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6125;}i:228;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6131;}i:229;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:3:"red";i:1;s:0:"";}}i:2;i:1;i:3;s:11:"<color red>";}i:2;i:6132;}i:230;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:43:"  如果是在git log 查看历史记录中";}i:2;i:3;i:3;s:43:"  如果是在git log 查看历史记录中";}i:2;i:6143;}i:231;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:6186;}i:232;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6194;}i:233;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6194;}i:234;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6194;}i:235;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6194;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"注释：可通过在终端 执行 man git-rev-list 查看其详细的区别。";}i:2;i:6196;}i:237;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6275;}i:238;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6275;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"如下图的提交历史：";}i:2;i:6277;}i:240;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6304;}i:241;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:192:"      D---E-------F                      特性分支2
     /      
    B---C---G---H---I---J            特性分支1
   /                     
  A-------K---------------L--M     主分支 
 ";}i:2;i:6304;}i:242;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6304;}i:243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"git log F..J 将显示C, G, H, I, J";}i:2;i:6510;}i:244;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6545;}i:245;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6545;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"git log J..F 将显示D, E, F";}i:2;i:6547;}i:247;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6576;}i:248;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6576;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"git log F..M 将显示K, L, M";}i:2;i:6578;}i:250;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6607;}i:251;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6607;}i:252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"git log M..F 将显示B, D, E, F";}i:2;i:6609;}i:253;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6641;}i:254;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6641;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"git log F";}i:2;i:6643;}i:256;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:6652;}i:257;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"J 将显示D, E, F, C, G, H, I, J";}i:2;i:6655;}i:258;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6688;}i:259;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6688;}i:260;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"git log F";}i:2;i:6690;}i:261;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:6699;}i:262;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"M 将显示B, D, E, F, K, L, M";}i:2;i:6702;}i:263;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6732;}i:264;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6732;}i:265;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"综上我们可以知道：";}i:2;i:6734;}i:266;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6761;}i:267;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:485:"

1）“R1..R2” 与 “^R1 R2”表示的范围一样，均可以表示达到 R2但不可以达到R1的所有提交（即包含R2 但是不包含 R1）

2） “R1...R2” 叫做 ”Symmetric difference“，它与 "R1 R2 --not $(git merge-base --all R1 R2)"表示的范围一样，都是表示可以到R1或者R1，但是不能同时达到两者的提交（即包含R1和R2，但是不包含两者共同的祖先） 

3） “R1...R2” 和 “R2...R1” 表示的范围一样。

";i:1;s:4:"bash";i:2;N;}i:2;i:6768;}i:268;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7267;}i:269;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7267;}i:270;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7267;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7271;}i:272;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:1;i:1;a:2:{i:0;s:3:"red";i:1;s:0:"";}}i:2;i:1;i:3;s:11:"<color red>";}i:2;i:7272;}i:273;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:3;i:1;s:44:"  如果是在git diff 对比文件差异中";}i:2;i:3;i:3;s:44:"  如果是在git diff 对比文件差异中";}i:2;i:7283;}i:274;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:5:"color";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</color>";}i:2;i:7327;}i:275;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7335;}i:276;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7335;}i:277;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7335;}i:278;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7335;}i:279;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" 注释：可通过在终端 执行 man git-diff 查看该命令具体使用方法。";}i:2;i:7336;}i:280;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7421;}i:281;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7421;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"案例如下：我们首先通过 git log 查看一下当前git库都有那些提交，在分别执行 git diff SHA1 SHA2，git diff SHA1..SHA2，git diff SHA1";}i:2;i:7423;}i:283;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:7582;}i:284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"SHA2 查看之间的区别。";}i:2;i:7585;}i:285;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7614;}i:286;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7614;}i:287;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-21_14_20_06屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:7616;}i:288;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7661;}i:289;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7661;}i:290;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-21_14_17_57屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:7663;}i:291;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7708;}i:292;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7708;}i:293;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-21_14_18_30屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:7710;}i:294;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7755;}i:295;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7755;}i:296;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:40:":git:2016-12-21_14_18_49屏幕截图.png";i:1;s:0:"";i:2;N;i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:7757;}i:297;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7802;}i:298;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7802;}i:299;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"其次，我们也可以通过查看官方资料给出的解释：";}i:2;i:7804;}i:300;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7870;}i:301;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7870;}i:302;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"git diff [";}i:2;i:7872;}i:303;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:7882;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"options] <commit> <commit> [";}i:2;i:7884;}i:305;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:7912;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"] [<path>";}i:2;i:7914;}i:307;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:7923;}i:308;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"] ";}i:2;i:7926;}i:309;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7928;}i:310;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:114:"      This is to view the changes between two arbitrary <commit>.    （对比两者提交之间的任意差异）";}i:2;i:7928;}i:311;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7928;}i:312;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"git diff [";}i:2;i:8047;}i:313;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:8057;}i:314;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"options] <commit>..<commit> [";}i:2;i:8059;}i:315;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:8088;}i:316;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"] [<path>";}i:2;i:8090;}i:317;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:8099;}i:318;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"]";}i:2;i:8102;}i:319;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8103;}i:320;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:275:"       This is synonymous to the previous form. If <commit> on one side is omitted, it will have the same effect as using HEAD instead. （对比两者提交之间的任意差异，即使在其中一个提交中被忽略，但其提交记录依旧会被应用在HEAD中。）";}i:2;i:8103;}i:321;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8103;}i:322;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"git diff [";}i:2;i:8383;}i:323;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:8393;}i:324;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"options] <commit>";}i:2;i:8395;}i:325;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:8412;}i:326;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"<commit> [";}i:2;i:8415;}i:327;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:8425;}i:328;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"] [<path>";}i:2;i:8427;}i:329;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:8436;}i:330;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"]";}i:2;i:8439;}i:331;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8440;}i:332;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:370:"       This form is to view the changes on the branch containing and up to the second <commit>, starting at a common ancestor of both  <commit>. "git diff A...B" is equivalent to "git diff $(git-merge-base A B) B". You can omit any one of <commit>, which has the same effect as using HEAD instead   （输出自A和B分别开发以来，B分支上的更改。）
       ";}i:2;i:8440;}i:333;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8440;}i:334;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" $ git diff topic master    (1)                ";}i:2;i:8816;}i:335;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:8863;}i:336;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" 1. Changes between the tips of the topic and the master branches.";}i:2;i:8866;}i:337;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8932;}i:338;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8932;}i:339;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:" $ git diff topic..master   (2)                 ";}i:2;i:8934;}i:340;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:8982;}i:341;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"2. Same as above.";}i:2;i:8985;}i:342;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9002;}i:343;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9002;}i:344;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" $ git diff topic";}i:2;i:9004;}i:345;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:9021;}i:346;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"master  (3)                 ";}i:2;i:9024;}i:347;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:9052;}i:348;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:99:"3. Changes that occurred on the master branch since when the topic branch was started off it.      ";}i:2;i:9055;}i:349;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9154;}i:350;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9154;}i:351;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"综上我们可以知道：";}i:2;i:9160;}i:352;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9187;}i:353;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:202:"

1）“R1..R2” 表示R1到R2之间的区别，功能通 ”R1 R2“不添加 ..    

2） “R1...R2” 与git diff $(git merge-base R1 R2)R2 相同，表示从R1和R2公共祖先到R2的区别。

";i:1;s:4:"bash";i:2;N;}i:2;i:9194;}i:354;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9411;}i:355;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Git 忽略文件";i:1;i:2;i:2;i:9411;}i:2;i:9411;}i:356;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:9411;}i:357;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9411;}i:358;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:13:"git:gitignore";i:1;s:16:"Git 忽略文件";}i:2;i:9440;}i:359;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9474;}i:360;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9475;}i:361;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:9475;}}