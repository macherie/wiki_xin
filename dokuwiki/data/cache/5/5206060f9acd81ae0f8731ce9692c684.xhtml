
<p>
在yocto平台（for freescale）中实现交叉编译具体步骤如下：
</p>

<p>
如i.mx 6ul为例
</p>
<ul>
<li class="level1"><div class="li"> 一.生成编译工具链</div>
</li>
</ul>

<p>
在平台根目录下输入 MACHINE=imx6ulevk source fsl-setup-release.sh -b build -e fb
</p>

<p>
进入build目录后输入 bitbake meta-toolchain 生成工具链运行脚本
</p>

<p>
生成的脚本目录./build/tmp/deploy/sdk/
</p>

<p>
运行poky-glibc-x86_64-meta-toolchain-cortexa7hf-vfp-neon-toolchain-1.8.sh 会让你选择工具链生成目录默认为 /opt/poky/1.8/
</p>
<ul>
<li class="level1"><div class="li"> 二.设置环境变量</div>
</li>
</ul>

<p>
执行 source /opt/poky/1.8/environment-setup-cortexa7hf-vfp-neon-poky-linux-gnueabi
</p>

<p>
然后输入echo $CC
</p>

<p>
如果显示  arm-poky-linux-gnueabi-gcc -march=armv7-a -mfloat-abi=hard -mfpu=neon -mtune=cortex-a7 –sysroot=/opt/poky/1.8/sysroots/cortexa7hf-vfp-neon-poky-linux-gnueabi  则表示交叉编译环境设置成功。
</p>
<ul>
<li class="level1"><div class="li"> 三.交叉编译程序源码包</div>
</li>
</ul>

<p>
以pppd源码包为例：
</p>

<p>
1.解压下载的pppd源码包
</p>

<p>
2.在源码包根目录下运行./configure 生成相关的Makefile
</p>

<p>
3.修改源码包中的Makefile   需要把有 CC = gcc 之类的注释掉，让CC使用环境变量中的交叉编译工具
</p>

<p>
4.运行make生成可执行文件，然后把该文件通过添加层的方式copy到image的rootfs中
</p>

<p>
如果是一些由configure生成Makefile的源码包，如libcurl，在设置完交叉编译工具链后，输入./configure –host=arm-poky-linux-gnueabi 来生成交叉编译的Makefile
</p>

<p>
注：在交叉编译过程，会碰到有些源码包用系统的gcc能编译，换了交叉编译工具编译就会报错的问题。
如在编译iproute2的源码包时，由于交叉编译工具缺少对汇编asm的头文件支持，导致编译arpd命令的时候会报错，但是由于用不到arpd命令，且此时可执行文件ip已生成，所以可以直接移植ip命令。
</p>
<ul>
<li class="level1"><div class="li"> 四.添加可执行文件/sh脚本到image</div>
</li>
</ul>

<p>
新建层meta-com808
</p>

<p>
复制文件至source目录下meta-com808/recipes-example/example/elmo-com808-0.1/
</p>

<p>
修改meta-com808/recipes-example/example目录下elmo-com808_0.1.bb文件
</p>
<pre class="code bash">SRC_URI = <span class="st0">&quot;...<span class="es1">\
</span>	file://xxx \     #添加这句才会在编译时把source文件夹下新添加的文件载入
&quot;</span>
...
&nbsp;
do_install<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
	     <span class="kw2">install</span> <span class="re5">-d</span> <span class="co1">${D}</span><span class="co1">${bindir}</span> <span class="co0">#把SRC_URI 中的文件copy到rootfs的usr/bin目录</span>
             ...
	     <span class="kw2">install</span> <span class="re5">-m</span> 0755 XXX <span class="co1">${D}</span><span class="co1">${bindir}</span>   <span class="co0">#添加权限</span>
<span class="br0">&#125;</span></pre>
